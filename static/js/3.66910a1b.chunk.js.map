{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","assets/img/Header.png","assets/img/draw.png","components/Profile/MyPosts/post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","s","item","src","avatar","message","likes","likequantity","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","name","validate","required","maxLength10","MyPosts","memo","postsElements","posts","map","p","postsBlock","values","addPost","newPostText","maxLengthCreator","MyPostsContainer","newPostState","profilePage","postsData","dispatch","addPostActionCreater","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileData","profile","toEditMode","isOwner","onClick","lookingForAJob","lookingForAJobDescription","aboutMe","contacts","Object","keys","k","contactTitle","ProfileDataForm","Contact","ProfileInfo","savePhoto","preloader","onMainPhotoSelect","target","files","length","headerBg","HeaderBg","descriptionBlock","imgBlock","photos","large","changeBtn","id","type","htmlFor","changeLabel","pen","fullName","description","Profile","content","ProfileContainer","userId","match","params","loginedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.66910a1b.chunk.js","sourcesContent":["import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nlet mapStateToPropsForRedirect = (state) => ({\n        isAuth: state.auth.isAuth\n    })\n    \nexport const withAuthRedirect = (Component) => {\n    \n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />\n            return <Component {...this.props} />\n        }\n    }\n    \n\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedRedirectComponent\n}\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2wLDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2ey1u\",\"likes\":\"Post_likes__xCqO2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__2Io2G\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"description\":\"ProfileInfo_description__2yWda\",\"contacts\":\"ProfileInfo_contacts__3y62P\",\"name\":\"ProfileInfo_name__1VvQB\",\"changeBtn\":\"ProfileInfo_changeBtn__3jaLb\",\"imgBlock\":\"ProfileInfo_imgBlock__1lD7I\",\"changeLabel\":\"ProfileInfo_changeLabel__1eLAt\"};","module.exports = __webpack_public_path__ + \"static/media/Header.b4ac23a1.png\";","module.exports = __webpack_public_path__ + \"static/media/draw.247957ca.png\";","import React from 'react';\nimport s from \"./Post.module.css\";\nimport avatar from \"../../../../assets/img/1521018917.png\"\n\nconst Post = (props) => {\n    return (\n        <div className={s.item}>\n            <img src={avatar} />\n            <h3>{props.message}</h3>\n            <span className={s.likes}><img src=\"https://c7.uihere.com/icons/402/773/196/like-136720fdf0630770c8e860dc4d819847.png\"/>{props.likequantity}</span>\n        </div>\n    );\n}\n\nexport default Post;","import React from 'react'\nimport s from \"./MyPosts.module.css\"\nimport Post from './post/Post'\nimport {Field , reduxForm} from 'redux-form'\nimport {required , maxLengthCreator} from '../../../utils/validators/validators'\nimport { Textarea } from '../../common/FormsControl/FormsControls'\n\n\nlet AddNewPostForm = props => {\n    return <form onSubmit={props.handleSubmit}>\n        <div>\n            <Field placeholder=\"new message\" component={Textarea} name=\"newPostText\" validate={[required, maxLength10]} />\n        </div>\n        <div>\n            <button>Add post</button>\n        </div>\n    </form>\n}\n\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\n\nconst MyPosts = React.memo(props => {\n\n    let postsElements = props.posts.map(p => <Post\n         message = {p.message} \n         likequantity = {p.likequantity}/>)\n\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText)\n    }\n\n    return (\n        <div className={s.postsBlock}>\n            <h3>My post</h3>\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\n            <div className={s.posts}>\n              {postsElements}\n              </div>\n        </div>\n    );\n})\n\nconst maxLength10 = maxLengthCreator(30)\n\nexport default MyPosts;","import MyPosts from './MyPosts';\nimport {addPostActionCreater } from '../../../redux/profile-reducer';\nimport { connect } from 'react-redux'\n\nlet mapStateToProps = (state) => {\n    return {\n        newPostState : state.profilePage.newPostState,\n        posts : state.profilePage.postsData\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreater(newPostText));\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps , mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React, { useEffect } from 'react'\nimport { useState } from 'react'\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode , setEditMode] = useState(false)\n    let [status , setStatus] = useState(props.status)\n   \n    useEffect( () => {\n        setStatus(props.status)\n    }, [props.status])\n\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n   return <div>\n            {!editMode &&\n                <div>\n                    <b>status:</b><span onDoubleClick={activateEditMode}>{props.status || \"no status\"}</span>\n                </div>\n            }{editMode &&\n                <div>\n                    <b>status:</b><input onChange={onStatusChange} onBlur={deactivateEditMode} \n                    value={status}\n                    autoFocus={true}/>\n                </div>\n            }\n        </div>\n}\n\nexport default ProfileStatusWithHooks","import React, { useState } from 'react'\nimport s from \"./ProfileInfo.module.css\"\nimport Preloader from '../../common/preloader/preloader'\nimport HeaderBg from '../../../assets/img/Header.png'\nimport avatar from '../../../assets/img/1521018917.png'\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\nimport pen from '../../../assets/img/draw.png'\n\nconst ProfileInfo = ({profile , savePhoto , status , updateStatus , isOwner}) => {\n    let [editMode , setEditMode] = useState(false)\n    \n    if (!profile) {\n        return <Preloader className={s.preloader} />\n    }\n\n    const onMainPhotoSelect = (e) => {\n        if(e.target.files.length){\n        savePhoto(e.target.files[0])\n        }\n    }\n\n    return (\n        <div>\n            <div>\n                <img className={s.headerBg} src={HeaderBg} />\n            </div>\n            <div className={s.descriptionBlock}>\n                <div className={s.imgBlock}>\n                <img src={profile.photos.large || avatar} />\n                {isOwner && <><input className={s.changeBtn} id={\"changeBtn\"} type={\"file\"} onChange={onMainPhotoSelect}/><label htmlFor={\"changeBtn\"} className={s.changeLabel}><img src={pen}/></label></>}\n                </div>\n                <div className={s.name}>\n                    {profile.fullName}\n                </div>\n                <div className={s.description}>\n\n                <ProfileStatusWithHooks status={status}\n                 updateStatus={updateStatus} />\n                {editMode ? \n                <ProfileDataForm profile={profile}/> : \n                <ProfileData toEditMode={() => {setEditMode(true)}} onMainPhotoSelect={onMainPhotoSelect} isOwner={isOwner} profile={profile}/>}\n            </div>\n            </div>\n        </div>\n    );\n}\n\nconst ProfileData = ({profile , toEditMode , isOwner}) => {\n    return <div>\n    {isOwner && <div><button onClick={toEditMode}>edit</button></div>}\n        <div>\n            <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\n        </div>\n        {profile.lookingForAJob &&\n            <div>\n                <b>My professional skills: </b>{profile.lookingForAJobDescription}\n            </div>}\n        <div>\n            <b>About me:</b> {profile.aboutMe}\n        </div>\n        <div className={s.contacts}>\n            <b>Contacts: </b> {Object.keys(profile.contacts).map(k => {\n                return <Contact contactTitle={k} value={profile.contacts[k]} />\n            })}\n        </div>\n    </div>\n}\n\nconst ProfileDataForm = ({profile}) => {\n    return <div>\n        Form\n    </div>\n}\n\nconst Contact = ({ contactTitle, value }) => {\n    return (\n        <div><b>{contactTitle}:</b>{value}</div>\n    )\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport s from \"./Profile.module.css\";\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport { Redirect } from 'react-router-dom';\n\nconst Profile = (props) => {\n\n    return (\n        <div className={s.content}>\n            <ProfileInfo profile={props.profile} status={props.status} isOwner={props.isOwner} savePhoto={props.savePhoto} updateStatus={props.updateStatus}/>\n            <MyPostsContainer/>\n        </div>\n    );\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { getUserProfile , getStatus , updateStatus ,savePhoto} from '../../redux/profile-reducer'\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = this.props.loginedUserId\n            if(!userId) {\n                this.props.history.push(\"/login\")\n            }\n        }\n        this.props.getUserProfile(userId)\n        this.props.getStatus(userId)\n    }\n\n    componentDidMount() {\n       this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps , prevState , snapshot) {\n        if(this.props.match.params.userId != prevProps.match.params.userId){\n        this.refreshProfile()\n        }\n    }\n\n    render() {\n        return (\n            <Profile {...this.props} \n            savePhoto={this.props.savePhoto}\n            isOwner={!this.props.match.params.userId}\n            profile={this.props.profile} status={this.props.status} \n            updateStatus={this.props.updateStatus}/>\n        )\n    }\n}\n\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    loginedUserId: state.auth.id,\n    isAuth: state.auth.isAuth\n})\n\nexport default compose(\n    connect(mapStateToProps, { getUserProfile , savePhoto , getStatus , updateStatus}),\n    withRouter,\n     withAuthRedirect\n)(ProfileContainer)\n"],"sourceRoot":""}