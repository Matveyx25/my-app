{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/post/Post.module.css","assets/img/Header.png","assets/img/draw.png","components/Profile/MyPosts/post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","s","item","src","avatar","message","likes","likequantity","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","name","validate","required","maxLength10","MyPosts","memo","postsElements","posts","map","p","key","id","postsBlock","values","addPost","newPostText","maxLengthCreator","MyPostsContainer","newPostState","profilePage","postsData","dispatch","addPostActionCreater","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileDataReduxForm","profile","error","createField","Input","checkbox","type","contacts","Object","keys","k","ProfileData","toEditMode","isOwner","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","Contact","ProfileInfo","savePhoto","saveProfile","preloader","onMainPhotoSelect","target","files","length","headerBg","HeaderBg","descriptionBlock","imgBlock","photos","large","changeBtn","htmlFor","changeLabel","pen","description","initialValues","formData","then","Profile","content","ProfileContainer","userId","match","params","loginedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.42460688.chunk.js","sourcesContent":["import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nlet mapStateToPropsForRedirect = (state) => ({\n        isAuth: state.auth.isAuth\n    })\n    \nexport const withAuthRedirect = (Component) => {\n    \n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />\n            return <Component {...this.props} />\n        }\n    }\n    \n\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedRedirectComponent\n}\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__2Io2G\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"description\":\"ProfileInfo_description__2yWda\",\"contacts\":\"ProfileInfo_contacts__3y62P\",\"name\":\"ProfileInfo_name__1VvQB\",\"changeBtn\":\"ProfileInfo_changeBtn__3jaLb\",\"imgBlock\":\"ProfileInfo_imgBlock__1lD7I\",\"changeLabel\":\"ProfileInfo_changeLabel__1eLAt\",\"checkbox\":\"ProfileInfo_checkbox__1msZX\",\"error\":\"ProfileInfo_error__rRsoU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2wLDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2ey1u\",\"likes\":\"Post_likes__xCqO2\"};","module.exports = __webpack_public_path__ + \"static/media/Header.b4ac23a1.png\";","module.exports = __webpack_public_path__ + \"static/media/draw.247957ca.png\";","import React from 'react';\nimport s from \"./Post.module.css\";\nimport avatar from \"../../../../assets/img/1521018917.png\"\n\nconst Post = (props) => {\n    return (\n        <div className={s.item}>\n            <img src={avatar} />\n            <h3>{props.message}</h3>\n            <span className={s.likes}><img src=\"https://c7.uihere.com/icons/402/773/196/like-136720fdf0630770c8e860dc4d819847.png\"/>{props.likequantity}</span>\n        </div>\n    );\n}\n\nexport default Post;","import React from 'react'\nimport s from \"./MyPosts.module.css\"\nimport Post from './post/Post'\nimport {Field , reduxForm} from 'redux-form'\nimport {required , maxLengthCreator} from '../../../utils/validators/validators'\nimport { Textarea } from '../../common/FormsControl/FormsControls'\n\n\nlet AddNewPostForm = props => {\n    return <form onSubmit={props.handleSubmit}>\n        <div>\n            <Field placeholder=\"new message\" component={Textarea} name=\"newPostText\" validate={[required, maxLength10]} />\n        </div>\n        <div>\n            <button>Add post</button>\n        </div>\n    </form>\n}\n\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\n\nconst MyPosts = React.memo(props => {\n\n    let postsElements = props.posts.map(p => <Post key={p.id}\n         message = {p.message} \n         likequantity = {p.likequantity}/>)\n\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText)\n    }\n\n    return (\n        <div className={s.postsBlock}>\n            <h3>My post</h3>\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\n            <div className={s.posts}>\n              {postsElements}\n              </div>\n        </div>\n    )\n})\n\nconst maxLength10 = maxLengthCreator(30)\n\nexport default MyPosts","import MyPosts from './MyPosts';\nimport {addPostActionCreater } from '../../../redux/profile-reducer';\nimport { connect } from 'react-redux'\n\nlet mapStateToProps = (state) => {\n    return {\n        newPostState : state.profilePage.newPostState,\n        posts : state.profilePage.postsData\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreater(newPostText));\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps , mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React, { useEffect } from 'react'\nimport { useState } from 'react'\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode , setEditMode] = useState(false)\n    let [status , setStatus] = useState(props.status)\n   \n    useEffect( () => {\n        setStatus(props.status)\n    }, [props.status])\n\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n   return <div>\n            {!editMode &&\n                <div>\n                    <b>status:</b><span onDoubleClick={activateEditMode}>{props.status || \"no status\"}</span>\n                </div>\n            }{editMode &&\n                <div>\n                    <b>status:</b><input onChange={onStatusChange} onBlur={deactivateEditMode} \n                    value={status}\n                    autoFocus={true}/>\n                </div>\n            }\n        </div>\n}\n\nexport default ProfileStatusWithHooks","import React from 'react';\nimport {createField, Input, Textarea} from '../../common/FormsControl/FormsControls'\nimport { reduxForm } from 'redux-form';\nimport s from './ProfileInfo.module.css'\n\nconst ProfileDataForm = ({ profile , handleSubmit , error}) => {\n    return <form onSubmit={handleSubmit}>\n        <div><button>Save</button></div>\n        {error && <div className={s.error}>{error}</div>}\n        <div>\n            <b>Name:</b>{ createField(\"name\", \"fullName\", [], Input) }\n        </div>\n        <div className={s.checkbox}>\n            <b>Looking for a job:</b> { createField(null, \"lookingForAJob\", [], Input, {type: \"checkbox\"}) }\n        </div>\n        <div>\n            <b>My professional skills: </b>{ createField(\"professional skills\", \"lookingForAJobDescription\", [], Textarea)}\n        </div>\n        <div>\n            <b>About me:</b> { createField(\"About me\", \"aboutMe\", [], Textarea )}\n        </div>\n        <div className={s.contacts}>\n            <b>Contacts</b> {Object.keys(profile.contacts).map(k => {\n                return <div key={k}>\n                    {createField(k, \"contacts.\" + k, [] , Input )}\n                </div>\n            })}\n        </div>\n    </form>\n}\n\nconst ProfileDataReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\n\nexport default ProfileDataReduxForm\n","import React, { useState } from 'react'\nimport s from \"./ProfileInfo.module.css\"\nimport Preloader from '../../common/preloader/preloader'\nimport HeaderBg from '../../../assets/img/Header.png'\nimport avatar from '../../../assets/img/1521018917.png'\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\nimport pen from '../../../assets/img/draw.png'\nimport ProfileDataForm from './ProfileDataForm'\n\nconst ProfileInfo = ({profile , savePhoto , status , updateStatus , isOwner , saveProfile}) => {\n    let [editMode , setEditMode] = useState(false)\n    \n    if (!profile) {\n        return <Preloader className={s.preloader} />\n    }\n\n    const onSubmit = (formData) => {\n            saveProfile(formData).then(() =>\n             {setEditMode(false)})\n        }\n\n    const onMainPhotoSelect = (e) => {\n        if(e.target.files.length){\n        savePhoto(e.target.files[0])\n        }\n    }\n\n    return (\n        <div>\n            <div>\n                <img className={s.headerBg} src={HeaderBg} />\n            </div>\n            <div className={s.descriptionBlock}>\n                <div className={s.imgBlock}>\n                <img src={profile.photos.large || avatar} />\n                {isOwner && <><input className={s.changeBtn} id={\"changeBtn\"} type={\"file\"} onChange={onMainPhotoSelect}/><label htmlFor={\"changeBtn\"} className={s.changeLabel}><img src={pen}/></label></>}\n                </div>\n                \n                <div className={s.description}>\n                \n                {editMode ? \n                <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/> : \n                <ProfileData toEditMode={() => {setEditMode(true)}} onMainPhotoSelect={onMainPhotoSelect} isOwner={isOwner} profile={profile}/>}\n                 <ProfileStatusWithHooks status={status}\n                 updateStatus={updateStatus} />\n                 </div>\n            </div>\n        </div>\n    );\n}\n\nconst ProfileData = ({profile , toEditMode , isOwner}) => {\n    return <div>\n    {isOwner && <div><button onClick={toEditMode}>edit</button></div>}\n        <div className={s.name}>\n                    {profile.fullName}\n        </div>\n        <div>\n            <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\n        </div>\n        {profile.lookingForAJob &&\n            <div>\n                <b>My professional skills: </b>{profile.lookingForAJobDescription}\n            </div>}\n        <div>\n            <b>About me:</b> {profile.aboutMe}\n        </div>\n        <div className={s.contacts}>\n            <b>Contacts</b> {Object.keys(profile.contacts).map(k => {\n                return <Contact contactTitle={k} value={profile.contacts[k]} />\n            })}\n        </div>\n    </div>\n}\n\nconst Contact = ({ contactTitle, value }) => {\n    return (\n        <div>{!value || <div><b>{contactTitle}:</b>{value}</div>}</div>\n    )\n}\n\nexport default ProfileInfo;\n","import React from 'react';\nimport s from \"./Profile.module.css\";\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport { Redirect } from 'react-router-dom';\n\nconst Profile = (props) => {\n\n    return (\n        <div className={s.content}>\n            <ProfileInfo profile={props.profile}\n            status={props.status} isOwner={props.isOwner}\n            savePhoto={props.savePhoto}\n            updateStatus={props.updateStatus}\n            saveProfile={props.saveProfile}/>\n            <MyPostsContainer/>\n        </div>\n    );\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { getUserProfile , getStatus , saveProfile , updateStatus ,savePhoto} from '../../redux/profile-reducer'\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = this.props.loginedUserId\n            if(!userId) {\n                this.props.history.push(\"/login\")\n            }\n        }\n        this.props.getUserProfile(userId)\n        this.props.getStatus(userId)\n    }\n\n    componentDidMount() {\n       this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps , prevState , snapshot) {\n        if(this.props.match.params.userId != prevProps.match.params.userId){\n        this.refreshProfile()\n        }\n    }\n\n    render() {\n        return (\n            <Profile {...this.props} \n            savePhoto={this.props.savePhoto}\n            isOwner={!this.props.match.params.userId}\n            profile={this.props.profile} status={this.props.status} \n            updateStatus={this.props.updateStatus}\n            saveProfile={this.props.saveProfile}/>\n        )\n    }\n}\n\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    loginedUserId: state.auth.id,\n    isAuth: state.auth.isAuth\n})\n\nexport default compose(\n    connect(mapStateToProps, { getUserProfile , savePhoto\n         , getStatus , updateStatus , saveProfile }),\n    withRouter,\n     withAuthRedirect\n)(ProfileContainer)\n"],"sourceRoot":""}