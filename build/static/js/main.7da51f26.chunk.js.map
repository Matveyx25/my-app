{"version":3,"sources":["api/api.js","components/common/preloader/preloader.module.css","assets/img/circles.png","components/Navbar/Navbar.module.css","components/common/FormsControl/FormsControls.js","serviceWorker.js","components/Navbar/Navbar.jsx","redux/auth-reducer.js","components/Login/Login.jsx","redux/app-reducer.js","utils/objects-helpers.js","redux/users-reduser.js","redux/sidebar-reducer.js","redux/redux-store.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","hoc/withSuspense.js","App.js","index.js","components/common/preloader/preloader.js","components/Users/Users.module.css","utils/validators/validators.js","components/common/FormsControl/FormControls.module.css","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.js","redux/dialogs-reduser.js","assets/img/1521018917.png"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","getUnFollow","userId","delete","getFollow","post","getProfile","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptcha","module","exports","FormControl","input","meta","props","child","hasError","touched","error","className","s","formControl","children","Textarea","Input","createField","placeholder","name","validators","component","text","validate","Boolean","window","location","hostname","match","Navbar","nav","item","to","activeClassName","active","SET_USER_DATA","initialState","usersId","isAuth","captchaUrl","setAuthUserData","id","type","payload","getCaptchaUrlSuccess","getAuthUserData","dispatch","a","resultCode","getCaptchaUrl","url","authReducer","state","action","LoginReduxForm","reduxForm","form","handleSubmit","maxLength","maxLengthCreator","onSubmit","required","style","formSummaryError","src","connect","auth","message","messages","length","stopSubmit","_error","initialazed","appReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollow","apiMethod","actionCreator","usersReducer","followed","count","filter","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","usersPage","app","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddlewere","Paginator","totalItemsCount","portionsSize","onPageChange","pagesCount","Math","ceil","pages","i","push","portionsCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","currentWrap","btnScroll","onClick","p","selectedPage","e","User","user","follow","unfollow","wrap","avatar","photos","small","userPhoto","alt","disabled","some","unfollowBtn","followBtn","Users","key","getPageSize","getTotalUsersCount","getCurrentPage","getFetching","getFollowinginProgress","UsersAPIComponent","pageNumber","requestUsers","this","Component","UsersContainer","bind","page","totalCount","Header","header","loginBlock","HeaderContainer","React","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","catchAllUnhandledError","promiseRejectionEvent","alert","initialazeApp","addEventListener","removeEventListener","path","render","exact","AppContainer","withRouter","promise","Promise","all","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","Preloader","preloader","value","ADD_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO_SUCCESS","postsData","likequantity","addPostActionCreater","newPostText","setStatus","getUserProfile","file","getState","reject","newPost","stateCopy","unshift","photo","dialogs","author","addMessageActionCreator","newMessageBody","newMessage"],"mappings":"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","file":"static/js/main.7da51f26.chunk.js","sourcesContent":["import * as axios from 'axios'\n\nconst instance = axios.create({\n    withCredentials: true, \n    baseURL : 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\"API-KEY\" : \"b93c13bf-3a25-43aa-aa7b-bce3a68057ff\"}\n})\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10){\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data)\n    },\n    getUnFollow(userId){\n        return instance.delete(`follow/${userId}`)\n    },\n    getFollow(userId){\n        return instance.post(`follow/${userId}`)\n    },\n    getProfile(userId){\n        return profileAPI.getProfile(userId)\n    },\n}\nexport const profileAPI = {\n    getProfile(userId){\n        return instance.get(`profile/${userId}`)\n    },\n    getStatus(userId){\n        return instance.get(`profile/status/${userId}`)\n    }, \n    updateStatus(status){\n        return instance.put(`profile/status` , {status: status})\n    },\n    savePhoto(photoFile){\n        let formData = new FormData()\n        formData.append(\"image\" , photoFile)\n        return instance.put(`profile/photo` , formData, {\n            headers: {\n                'Content-Type': \"multipart/form-data\"\n            }\n        })\n    },\n    saveProfile(profile){\n        return instance.put(`profile` , profile)\n    }\n}\nexport const authAPI = {\n    me () { return instance.get(`auth/me`) },\n    login (email , password , rememberMe = false,\n         captcha = null){return instance.post(`auth/login`,\n          {email , password , rememberMe, captcha})},\n    logout (){return instance.delete(`auth/login`)}\n}\nexport const securityAPI = {\n    getCaptcha () { \n        return instance.get(`security/get-captcha-url`)\n    }\n}\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__cs5zW\",\"loader\":\"preloader_loader__2dI9R\"};","module.exports = __webpack_public_path__ + \"static/media/circles.7a0b3a52.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"active\":\"Navbar_active__3mbhk\"};","import React from 'react'\nimport s from './FormControls.module.css'\nimport { Field } from 'redux-form'\n\nconst FormControl = ({input , meta , child , ...props}) => {\n    const hasError = meta.touched && meta.error\n\n    return (\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\n            {props.children}\n              { hasError && <span>{meta.error}</span>}              \n        </div>\n    )\n}\n\nexport const Textarea = (props) => {\n    const {input , meta , child , ...restProps} = props\n    return <FormControl {...props}><textarea {...input} {...props}/></FormControl> \n}\n\nexport const Input = (props) => {\n    const {input , meta , child , ...restProps} = props\n    return <FormControl {...props}><input {...input} {...props}/></FormControl> \n}\n\nexport const createField = (placeholder , name , validators, component, props = {} ,text = '') => (\n<div>\n    <Field\n placeholder={placeholder} component={component} \n name={name} validate={validators} {...props}/>\n {text}\n </div>\n )","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport s from \"./Navbar.module.css\";\nimport { NavLink } from 'react-router-dom';\n\nconst Navbar = () => {\n    return (\n        <nav className={s.nav}>\n            <div className={s.item}><NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink></div>\n            <div className={s.item}><NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink></div>\n            <div className={s.item}><NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink></div>\n            <div className={s.item}><NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink></div>\n        </nav>\n    );\n}\n\nexport default Navbar;","import { authAPI, securityAPI } from \"../api/api\"\nimport { stopSubmit } from \"redux-form\"\n\nconst SET_USER_DATA = 'lightgram/auth/SET_USER_DATA'\nconst GET_CAPTCHA_URL_SUCCESS = 'lightgram/auth/GET_CAPTCHA_URL_SUCCESS'\n\nlet initialState = {\n    usersId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    captchaUrl: null,\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n        case GET_CAPTCHA_URL_SUCCESS: \n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport const setAuthUserData = (id, email, login, isAuth) =>\n    ({ type: SET_USER_DATA, payload: { id, email, login, isAuth } })\n\nexport const getCaptchaUrlSuccess = (captchaUrl) =>\n    ({ type: GET_CAPTCHA_URL_SUCCESS, payload: { captchaUrl}})\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.me()\n    if (response.data.resultCode === 0) {\n        let { id, email, login } = response.data.data\n        dispatch(setAuthUserData(id, email, login, true))\n    }\n}\n\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe, captcha)\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData())\n    } else {\n        if(response.data.resultCode === 10){\n            dispatch(getCaptchaUrl())\n        }\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\n        dispatch(stopSubmit(\"login\", { _error: message }))\n    }\n}\n\nexport const getCaptchaUrl = () => async (dispatch) => {\n    const response = await securityAPI.getCaptcha()\n    const captchaUrl = response.data.url\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\n}\n\n\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout()\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false))\n    }\n}\n\nexport default authReducer","import React from 'react'\nimport {Field , reduxForm} from 'redux-form'\nimport { Input, createField } from '../common/FormsControl/FormsControls'\nimport {required , maxLengthCreator } from '../../utils/validators/validators'\nimport { connect } from 'react-redux'\nimport {login} from '../../redux/auth-reducer'\nimport { Redirect } from 'react-router-dom'\nimport style from '../common/FormsControl/FormControls.module.css'\n\nconst Login = (props) => {\n    const onSubmit = (formData) =>{\n        props.login(formData.email , formData.password , formData.rememberMe, formData.captcha)\n    }\n    if(props.isAuth){\n        return<Redirect to=\"/profile\"/>\n    }else{\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\n    </div>\n    }\n}\n\nconst LoginForm = ({handleSubmit , error , captchaUrl}) => {\n    const maxLength = maxLengthCreator(20)\n    return <form onSubmit={handleSubmit}>\n            {createField('Email' , \"email\" , [required , maxLength] , Input )}\n            {createField('Password' , \"password\" , [required , maxLength] , Input, {type: \"password\"})}\n            {createField(null , \"rememberMe\" , null , Input , {type: \"checkbox\"} , \"remember me\")}\n            {error && <div className={style.formSummaryError}>{error}</div>}\n            {captchaUrl && <img src={captchaUrl}/>}\n            {captchaUrl && createField(\"symbols from image\", \"captcha\", [required], Input, {} )}\n            <div><button>send</button></div>\n        </form>\n}\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst mapStateToProps = (state) => ({\n    captchaUrl: state.auth.captchaUrl,\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps , {login})(Login)","import { getAuthUserData } from './auth-reducer'\n\nconst INITIALAZED_SUCCESS = 'INITIALAZED_SUCCESS'\n\nlet initialState = {\n    initialazed: false,\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALAZED_SUCCESS:\n            return {\n                ...state,\n                initialazed: true,\n                }   \n        default:\n            return state;\n    }\n}\n\n\nexport const initialazedSuccess = () => ({ type: INITIALAZED_SUCCESS})\n\nexport const initialazeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initialazedSuccess());\n        })\n}\n\nexport default appReducer","export const updateObjectInArray = (items , itemId, objPropName, newObjProps) => {\n    return items.map(u => {\n    if (u[objPropName] === itemId) {\n        return { ...u, ...newObjProps}\n    }\n    return u\n})\n}","import { usersAPI } from \"../api/api\"\nimport { updateObjectInArray } from \"../utils/objects-helpers\"\n\nconst FOLLOW = 'FOLLOW'\nconst UNFOLLOW = 'UNFOLLOW'\nconst SET_USERS = 'SET_USERS'\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\n\nlet initialState = {\n    users: [],\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: []\n}\n\nconst usersReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId , \"id\" , {followed: true})\n         }\n            case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId , \"id\" , {followed: false})\n                 }\n        case SET_USERS:\n            return { ...state, users: action.users }\n        case SET_CURRENT_PAGE:\n            return { ...state, currentPage: action.currentPage }\n        case SET_TOTAL_USERS_COUNT:\n            return { ...state, totalUsersCount: action.count }\n        case TOGGLE_IS_FETCHING:\n            return { ...state, isFetching: action.isFetching }\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        default:\n            return state\n    }\n}\n\n// ACTION CREATOR\n\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\nexport const setUsers = (users) => ({ type: SET_USERS, users })\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\nexport const setUsersTotalCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\n\n// THUNK\n\nconst followUnfollow = async (dispatch , userId , apiMethod , actionCreator) => {\n        dispatch(toggleFollowingProgress(true, userId))\n        let response = await apiMethod(userId)\n        if (response.data.resultCode == 0) {\n            dispatch(actionCreator(userId))\n        }\n        dispatch(toggleFollowingProgress(false, userId))\n}\n\nexport const requestUsers = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true))\n        dispatch(setCurrentPage(page))\n\n        let data = await usersAPI.getUsers(page, pageSize)\n        dispatch(toggleIsFetching(false))\n        dispatch(setUsers(data.items))\n        dispatch(setUsersTotalCount(data.totalCount))\n    }\n}\n\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollow(dispatch , userId , usersAPI.getUnFollow.bind(usersAPI) , unfollowSuccess)\n    }\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollow(dispatch , userId , usersAPI.getFollow.bind(usersAPI) , followSuccess)\n    }\n}\n\nexport default usersReducer","let initialState = {};\n\nconst sidebarReducer = (state = initialState, action) => {\n    return state;\n}\n\nexport default sidebarReducer;","import { combineReducers , createStore, applyMiddleware, compose  } from \"redux\"\nimport profileReducer from \"./profile-reducer\"\nimport dialogsReducer from \"./dialogs-reduser\"\nimport usersReducer from \"./users-reduser\"\nimport sidebarReducer from \"./sidebar-reducer\"\nimport authReducer from \"./auth-reducer\"\nimport thunkMiddlewere from \"redux-thunk\"\nimport { reducer as formReducer } from \"redux-form\"\nimport appReducer from \"./app-reducer\"\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    app: appReducer,\n    form: formReducer\n});\n\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducers, composeEnhancers(\n    applyMiddleware(thunkMiddlewere)\n  ))\n\nwindow.store = store\n\nexport default store","import React, { useState } from 'react'\nimport s from './Paginator.module.css'\n\nconst Paginator = ({totalItemsCount , pageSize , portionsSize , currentPage , onPageChange}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\n\n    let pages = [];\n\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionsCount = Math.ceil(pagesCount / portionsSize)\n    let [portionNumber , setPortionNumber] = useState(1)\n    let leftPortionPageNumber = (portionNumber - 1) * portionsSize + 1\n    let rightPortionPageNumber = portionNumber * portionsSize\n\n    return  <div className={s.currentWrap}>\n            {portionNumber > 1 &&\n             <button className={s.btnScroll} \n              onClick={() => setPortionNumber(portionNumber - 1)}>\n                  PREV</button>}\n            {pages\n            .filter(p => p >=\n                 leftPortionPageNumber && \n                 p <= rightPortionPageNumber)\n            .map(p => {\n                return <span className={currentPage === p\n                     && s.selectedPage}\n                    onClick={(e) => { onPageChange(p) }}>\n                    {p}</span>\n            })}\n            {portionsCount > portionNumber && \n            <button className={s.btnScroll}\n             onClick={() => setPortionNumber(portionNumber + 1)}>\n                 NEXT</button>}\n        </div>\n}\n\nexport default Paginator","import React from 'react'\nimport s from './Users.module.css'\nimport userPhoto from '../../assets/img/1521018917.png'\nimport { NavLink } from 'react-router-dom'\n\nconst User = ({user, followingInProgress , follow , unfollow}) => {\n    return <div className={s.wrap}>\n        <span>\n            <div>\n                <NavLink to={'/profile/' + user.id}>\n                    <img className={s.avatar} src={user.photos.small != null ? user.photos.small : userPhoto} alt=\"\" />\n                </NavLink>\n            </div>\n            <div>\n                {user.followed ?\n                    <button disabled={\n                       followingInProgress.some(id => id == user.id)} className={s.unfollowBtn} onClick={() => { unfollow(user.id) }} >unfollow</button> :\n                    <button disabled={followingInProgress.some(id => id == user.id)} className={s.followBtn} onClick={() => { follow(user.id) }}>follow</button>}\n            </div>\n        </span>\n        <span>\n            <div className={s.name}>{user.name}</div>\n            <div>{user.status}</div>\n        </span>\n    </div>\n}\n\nexport default User","import React from 'react'\nimport Paginator from '../common/Paginator/Paginator'\nimport User from './User'\n\nconst Users = (props) => {\n    return <div>\n        <Paginator totalItemsCount={props.totalUsersCount}\n            pageSize={props.pageSize} onPageChange={props.onPageChange}\n            currentPage={props.currentPage} portionsSize={10}/>\n        {props.users.map(u => <User user={u} key={u.id}\n            followingInProgress={props.followingInProgress}\n            follow={props.follow} unfollow={props.unfollow}\n             />)}\n    </div>\n}\n\nexport default Users","export const getUsers = (state) => {\n    return state.usersPage.users\n}\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize\n}\n\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount\n}\n\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage\n}\n\nexport const getFetching = (state) => {\n    return state.usersPage.isFetching\n}\n\nexport const getFollowinginProgress = (state) => {\n    return state.usersPage.followingInProgress\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Users from './Users'\nimport {compose} from \"redux\"\nimport Preloader from '../common/preloader/preloader.js'\nimport { follow, unfollow, setCurrentPage, toggleIsFetching, toggleFollowingProgress, requestUsers } from '../../redux/users-reduser'\nimport { getUsers , getPageSize , getTotalUsersCount , getCurrentPage , getFetching , getFollowinginProgress} from '../../redux/users-selectors'\nimport { Component } from 'react'\n\n\nclass UsersAPIComponent extends Component {\n\n    componentDidMount() {\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize)\n    }\n\n    onPageChange = (pageNumber) => {\n        this.props.requestUsers(pageNumber, this.props.pageSize)\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ?\n                <Preloader />\n                : null}\n            <Users\n                totalUsersCount={this.props.totalUsersCount}\n                pageSize={this.props.pageSize}\n                currentPage={this.props.currentPage}\n                onPageChange={this.onPageChange}\n                users={this.props.users}\n                follow={this.props.follow}\n                unfollow={this.props.unfollow}\n                toggleFollowingProgress={this.props.toggleFollowingProgress}\n                followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getFetching(state),\n        followingInProgress: getFollowinginProgress(state)\n    }\n}\n\nconst UsersContainer = connect(mapStateToProps, { follow , \n    unfollow , setCurrentPage , toggleIsFetching ,\n    toggleFollowingProgress , requestUsers })(UsersAPIComponent)\n\nexport default UsersContainer","import React from 'react';\nimport s from \"./Header.module.css\";\nimport { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n    return (\n        <header className={s.header}>\n            <img src=\"https://www.freepnglogos.com/uploads/eagles-png-logo/eagle-sports-png-logos--0.png\" />\n            <div className={s.loginBlock}>\n                {props.isAuth ? <div>{props.login} - <span onClick={props.logout}>Log out</span></div> : <NavLink to={'/login'}>Login</NavLink>}\n            </div>\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react'\nimport Header from './Header'\nimport {connect} from 'react-redux'\nimport {getAuthUserData , logout} from '../../redux/auth-reducer'\n\nclass HeaderContainer extends React.Component{\n\n    componentDidMount(){\n        this.props.getAuthUserData()\n    }\n\n    render(){\n      return <Header {...this.props}/>\n    }\n    \n}\n\nlet mapStateToProps = (state) => ({\n        isAuth: state.auth.isAuth,\n        login: state.auth.login,\n})\n\nexport default connect(mapStateToProps , {getAuthUserData , logout})(HeaderContainer)","import React from 'react'\nimport Preloader from '../components/common/preloader/preloader'\n    \nexport const withSuspense = (Component) => {\n    \n    return (props) => {\n       return <React.Suspense fallback={<Preloader/>}>\n            <Component {...props}/>\n        </React.Suspense>\n    }\n}\n\n","import React, { Component } from 'react'\nimport {Route, withRouter, HashRouter, Switch, Redirect} from \"react-router-dom\"\nimport './App.css'\nimport Navbar from './components/Navbar/Navbar'\nimport Login from './components/Login/Login'\nimport { initialazeApp } from './redux/app-reducer'\nimport { connect, Provider } from 'react-redux'\nimport { compose } from 'redux'\nimport Preloader from './components/common/preloader/preloader'\nimport store from './redux/redux-store'\nimport UsersContainer from './components/Users/UsersContainer'\nimport HeaderContainer from './components/Header/HeaderContainer' \nimport { withSuspense } from './hoc/withSuspense'\n\nconst DialogsContainer = React.lazy(() => import ('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import ('./components/Profile/ProfileContainer'));\n\n\nclass App extends Component {\n  catchAllUnhandledError = (promiseRejectionEvent) => {\n    alert(promiseRejectionEvent)\n  }\n  componentDidMount(){\n    this.props.initialazeApp()\n    window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledError)\n  }\n  componentWillUnmount(){\n    window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledError)\n  }\n  render() {\n    if(!this.props.initialazed){\n      return <Preloader />\n    }\n    return (\n        <div className=\"app-wrapper\">\n          <HeaderContainer />\n          <Navbar />\n          <div className=\"app-wrapper-content\">\n            <Switch>\n            <Route path=\"/dialogs\" \n            render={withSuspense(DialogsContainer)}/>\n            <Route path=\"/profile/:userId?\"\n             render= {withSuspense(ProfileContainer)}/>\n            <Route path=\"/users\" render={() => <UsersContainer />} />\n            <Route path=\"/login\" render={() => <Login />} />\n            <Route exact path=\"/\" render={() => <Redirect to={\"/profile\"}/>} />\n            <Route path=\"*\" render={() => <div className=\"error__not-found\">404 NOT FOUND</div>} />\n            </Switch>\n          </div>\n        </div>\n    )\n  } \n}\n  \nconst mapStateToProps = (state) => ({\n  initialazed: state.app.initialazed\n})\n\nconst AppContainer = compose(\n  withRouter ,\n   connect(mapStateToProps , {initialazeApp}))(App)\n\nconst MainApp = props => {\n  return <HashRouter>\n    <Provider store={store}>\n      <AppContainer/>\n    </Provider>\n  </HashRouter>\n} \n\nexport default MainApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport MainApp from './App';\n\nReactDOM.render(<MainApp />, document.getElementById('root'));\n\nserviceWorker.unregister();","import React from 'react'\nimport s from './preloader.module.css'\nimport preloader from '../../../assets/img/circles.png'\n\nlet Preloader = (props) => {\n    return <div>\n    <img className={s.preloader} src={preloader}/>\n    </div>\n}\n\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Users_avatar__gHOlh\",\"followBtn\":\"Users_followBtn__3m1nP\",\"name\":\"Users_name__3Kys8\",\"status\":\"Users_status__E0SMG\",\"wrap\":\"Users_wrap__3rrvn\"};","export const required = value => {\n    if(value) return undefined\n    return 'Field is required'\n}\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if(value && value.length > maxLength) return `max length is ${maxLength} symbols`\n    return undefined\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2gmnG\",\"error\":\"FormControls_error__1_o23\",\"formSummaryError\":\"FormControls_formSummaryError__2zzxQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__3SIki\",\"currentWrap\":\"Paginator_currentWrap__zSjHt\",\"btnScroll\":\"Paginator_btnScroll__36Abb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","import { usersAPI, profileAPI } from \"../api/api\"\nimport { stopSubmit } from \"redux-form\"\n\nconst ADD_POST = 'lightgram/profile/ADD-POST'\nconst SET_USER_PROFILE = 'lightgram/profile/SET-USER-PROFILE'\nconst SET_STATUS = 'lightgram/profile/SET-STATUS'\nconst SAVE_PHOTO_SUCCESS = 'lightgram/profile/SAVE_PHOTO_SUCCESS'\n\nlet initialState = {\n    postsData: [\n        { id: 1, message: 'Hi', likequantity: 23 },\n        { id: 2, message: 'Hello', likequantity: 23 },\n        { id: 3, message: 'you', likequantity: 23 },\n        { id: 3, message: 'Yo', likequantity: 23 },\n        { id: 5, message: 'Good bay', likequantity: 23 },\n        { id: 6, message: 'Lose', likequantity: 23 }\n    ],\n    profile: null,\n    status: \"\",\n}\n\nconst profileReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_POST:{\n            let newPost = {\n                id: 8,\n                message: action.newPostText,\n                likequantity: 0\n            }\n            let stateCopy = {...state}\n            stateCopy.postsData = [...state.postsData]\n            stateCopy.postsData.unshift(newPost)\n            return stateCopy\n        }\n        case SET_USER_PROFILE: \n            return {...state, profile: action.profile}\n        case SAVE_PHOTO_SUCCESS:\n            debugger\n            return {...state, profile: {...state.profile , photo: action.photos}}\n        case SET_STATUS: \n            return {...state, status: action.status}\n        default:\n            return state\n    }\n}\n\nexport const addPostActionCreater = (newPostText) => ({type: ADD_POST , newPostText})\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\nexport const setStatus = (status) => ({type: SET_STATUS, status})\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n    let response = await usersAPI.getProfile(userId)\n        dispatch(setUserProfile(response.data))\n}\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId)\n                dispatch(setStatus(response.data))\n}\nexport const updateStatus = (status) => async (dispatch) => {\n    let response = await profileAPI.updateStatus(status)\n        if(response.data.resultCode === 0) {\n            dispatch(setStatus(status))\n    }\n}\nexport const savePhoto = (file) => async (dispatch) => {\n    let response = await profileAPI.savePhoto(file)\n        if(response.data.resultCode === 0) {\n            dispatch(savePhotoSuccess(response.data.data.photos))\n        }\n}\nexport const saveProfile = (profile) => async (dispatch , getState) => {\n    const userId = getState().auth.userId\n    const response = await profileAPI.saveProfile(profile)\n        if(response.data.resultCode === 0) {\n           dispatch(getUserProfile(userId))\n        }else{\n            dispatch(stopSubmit(\"edit-profile\" , { _error: response.data.messages[0]}))\n            return Promise.reject(response.data.messages[0])\n        }\n}\n\nexport default profileReducer","const ADD_MESSAGE = 'ADD-MESSAGE'\n\nlet initialState = {\n    dialogs: [\n        { id: 1, name: 'Alex' },\n        { id: 2, name: 'Matvey' },\n        { id: 3, name: 'Victor' },\n        { id: 4, name: 'Sasha' },\n        { id: 5, name: 'Artem' },\n        { id: 6, name: 'Pasha' }\n    ],\n    messages: [\n        { id: 1, message: 'Hi', author: 'me' },\n        { id: 2, message: 'Hello', author: 'other' },\n        { id: 3, message: 'How are you', author: 'me' },\n        { id: 3, message: 'Good', author: 'other' },\n        { id: 5, message: 'And you', author: 'other' },\n        { id: 6, message: 'Good', author: 'me' }\n    ]\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_MESSAGE: {\n            let newMessage = {\n                id: 6,\n                message: action.newMessageBody,\n                author: 'me'\n            };\n            let stateCopy = {...state};\n            stateCopy.messages = [...state.messages];\n            stateCopy.messages.push(newMessage);\n            return  stateCopy;\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport const addMessageActionCreator = (newMessageBody) => ({type: ADD_MESSAGE , newMessageBody})\n\nexport default dialogsReducer","module.exports = __webpack_public_path__ + \"static/media/1521018917.e2c0fd31.png\";"],"sourceRoot":""}