{"ast":null,"code":"var _jsxFileName = \"/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/common/Paginator/Paginator.jsx\";\nimport React from 'react';\n\nconst Paginator = props => {\n  let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  return React.createElement(\"div\", {\n    className: s.currentWrap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, pages.map(p => {\n    return React.createElement(\"span\", {\n      className: props.currentPage === p && s.selectedPage,\n      onClick: e => {\n        props.onPageChange(p);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, p);\n  }));\n};\n\nexport default Paginator;","map":{"version":3,"sources":["/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/common/Paginator/Paginator.jsx"],"names":["React","Paginator","props","pagesCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","s","currentWrap","map","p","currentPage","selectedPage","e","onPageChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAEzB,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUH,KAAK,CAACI,eAAN,GAAwBJ,KAAK,CAACK,QAAxC,CAAjB;AAEA,MAAIC,KAAK,GAAG,EAAZ;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIN,UAArB,EAAiCM,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AACD,SAAQ;AAAK,IAAA,SAAS,EAAEE,CAAC,CAACC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCJ,KAAK,CAACK,GAAN,CAAUC,CAAC,IAAI;AACZ,WAAO;AAAM,MAAA,SAAS,EAAEZ,KAAK,CAACa,WAAN,KAAsBD,CAAtB,IAA2BH,CAAC,CAACK,YAA9C;AACH,MAAA,OAAO,EAAGC,CAAD,IAAO;AAAEf,QAAAA,KAAK,CAACgB,YAAN,CAAmBJ,CAAnB;AAAuB,OADtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEFA,CAFE,CAAP;AAGH,GAJA,CADD,CAAR;AAOH,CAhBD;;AAkBA,eAAeb,SAAf","sourcesContent":["import React from 'react'\n\nconst Paginator = (props) => {\n\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\n\n    let pages = [];\n\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n    return  <div className={s.currentWrap}>\n            {pages.map(p => {\n                return <span className={props.currentPage === p && s.selectedPage}\n                    onClick={(e) => { props.onPageChange(p) }}>\n                    {p}</span>\n            })}\n        </div>\n}\n\nexport default Paginator"]},"metadata":{},"sourceType":"module"}