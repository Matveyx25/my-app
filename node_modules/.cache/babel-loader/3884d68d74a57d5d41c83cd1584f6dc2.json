{"ast":null,"code":"import Dialogs from './Dialogs';\nimport { addMessageActionCreator, updateNewMessageTextActionCreater } from '../../redux/dialogs-reduser';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nlet mapStateToProps = state => {\n  return {\n    dialogsPage: state.dialogsPage,\n    newMessageState: state.dialogsPage.newMessageState,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addMessage: newMessageBody => {\n      dispatch(addMessageActionCreator(newMessageBody));\n    }\n  };\n};\n\nexport default compose(withAuthRedirect, connect(mapStateToProps, mapDispatchToProps))(Dialogs);","map":{"version":3,"sources":["/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/Dialogs/DialogsContainer.jsx"],"names":["Dialogs","addMessageActionCreator","updateNewMessageTextActionCreater","connect","withAuthRedirect","compose","mapStateToProps","state","dialogsPage","newMessageState","isAuth","auth","mapDispatchToProps","dispatch","addMessage","newMessageBody"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,SAASC,uBAAT,EAAkCC,iCAAlC,QAA2E,6BAA3E;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADhB;AAEHC,IAAAA,eAAe,EAAEF,KAAK,CAACC,WAAN,CAAkBC,eAFhC;AAGHC,IAAAA,MAAM,EAAEH,KAAK,CAACI,IAAN,CAAWD;AAHhB,GAAP;AAKH,CAND;;AAQA,IAAIE,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AAEHC,IAAAA,UAAU,EAAGC,cAAD,IAAoB;AAC5BF,MAAAA,QAAQ,CAACZ,uBAAuB,CAACc,cAAD,CAAxB,CAAR;AACH;AAJE,GAAP;AAMH,CAPD;;AASA,eAAeV,OAAO,CAClBD,gBADkB,EAElBD,OAAO,CAACG,eAAD,EAAkBM,kBAAlB,CAFW,CAAP,CAGVZ,OAHU,CAAf","sourcesContent":["import Dialogs from './Dialogs';\nimport { addMessageActionCreator, updateNewMessageTextActionCreater } from '../../redux/dialogs-reduser';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n        newMessageState: state.dialogsPage.newMessageState,\n        isAuth: state.auth.isAuth\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        \n        addMessage: (newMessageBody) => {\n            dispatch(addMessageActionCreator(newMessageBody));\n        }\n    }\n}\n\nexport default compose(\n    withAuthRedirect,\n    connect(mapStateToProps, mapDispatchToProps))\n    (Dialogs)"]},"metadata":{},"sourceType":"module"}