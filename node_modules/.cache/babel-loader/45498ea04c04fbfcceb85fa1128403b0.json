{"ast":null,"code":"import React from'react';import{Field,reduxForm}from'redux-form';import{Input,createField}from'../common/FormsControl/FormsControls';import{required,maxLengthCreator}from'../../utils/validators/validators';import{connect}from'react-redux';import{login}from'../../redux/auth-reducer';import{Redirect}from'react-router-dom';import style from'../common/FormsControl/FormControls.module.css';var Login=function Login(props){var onSubmit=function onSubmit(formData){props.login(formData.email,formData.password,formData.rememberMe,formData.captcha);};if(props.isAuth){return React.createElement(Redirect,{to:\"/profile\"});}else{return React.createElement(\"div\",null,React.createElement(\"h1\",null,\"Login\"),React.createElement(LoginReduxForm,{onSubmit:onSubmit,captchaUrl:props.captchaUrl}));}};var LoginForm=function LoginForm(_ref){var handleSubmit=_ref.handleSubmit,error=_ref.error,captchaUrl=_ref.captchaUrl;var maxLength=maxLengthCreator(20);return React.createElement(\"form\",{onSubmit:handleSubmit},createField('Email',\"email\",[required,maxLength],Input),createField('Password',\"password\",[required,maxLength],Input,{type:\"password\"}),createField(null,\"rememberMe\",null,Input,{type:\"checkbox\"},\"remember me\"),error&&React.createElement(\"div\",{className:style.formSummaryError},error),captchaUrl&&React.createElement(\"img\",{src:captchaUrl}),captchaUrl&&createField(\"symbols from image\",\"captcha\",[required],Input,{}),React.createElement(\"div\",null,React.createElement(\"button\",null,\"send\")));};var LoginReduxForm=reduxForm({form:'login'})(LoginForm);var mapStateToProps=function mapStateToProps(state){return{captchaUrl:state.auth.captchaUrl,isAuth:state.auth.isAuth};};export default connect(mapStateToProps,{login:login})(Login);","map":{"version":3,"sources":["/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/Login/Login.jsx"],"names":["React","Field","reduxForm","Input","createField","required","maxLengthCreator","connect","login","Redirect","style","Login","props","onSubmit","formData","email","password","rememberMe","captcha","isAuth","captchaUrl","LoginForm","handleSubmit","error","maxLength","type","formSummaryError","LoginReduxForm","form","mapStateToProps","state","auth"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,KAAR,CAAgBC,SAAhB,KAAgC,YAAhC,CACA,OAASC,KAAT,CAAgBC,WAAhB,KAAmC,sCAAnC,CACA,OAAQC,QAAR,CAAmBC,gBAAnB,KAA2C,mCAA3C,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAAQC,KAAR,KAAoB,0BAApB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,gDAAlB,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CACrB,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAa,CAC1BF,KAAK,CAACJ,KAAN,CAAYM,QAAQ,CAACC,KAArB,CAA6BD,QAAQ,CAACE,QAAtC,CAAiDF,QAAQ,CAACG,UAA1D,CAAsEH,QAAQ,CAACI,OAA/E,EACH,CAFD,CAGA,GAAGN,KAAK,CAACO,MAAT,CAAgB,CACZ,MAAM,qBAAC,QAAD,EAAU,EAAE,CAAC,UAAb,EAAN,CACH,CAFD,IAEK,CACL,MAAO,gCACH,sCADG,CAEH,oBAAC,cAAD,EAAgB,QAAQ,CAAEN,QAA1B,CAAoC,UAAU,CAAED,KAAK,CAACQ,UAAtD,EAFG,CAAP,CAIC,CACJ,CAZD,CAcA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAyC,IAAvCC,CAAAA,YAAuC,MAAvCA,YAAuC,CAAxBC,KAAwB,MAAxBA,KAAwB,CAAhBH,UAAgB,MAAhBA,UAAgB,CACvD,GAAMI,CAAAA,SAAS,CAAGlB,gBAAgB,CAAC,EAAD,CAAlC,CACA,MAAO,6BAAM,QAAQ,CAAEgB,YAAhB,EACElB,WAAW,CAAC,OAAD,CAAW,OAAX,CAAqB,CAACC,QAAD,CAAYmB,SAAZ,CAArB,CAA8CrB,KAA9C,CADb,CAEEC,WAAW,CAAC,UAAD,CAAc,UAAd,CAA2B,CAACC,QAAD,CAAYmB,SAAZ,CAA3B,CAAoDrB,KAApD,CAA2D,CAACsB,IAAI,CAAE,UAAP,CAA3D,CAFb,CAGErB,WAAW,CAAC,IAAD,CAAQ,YAAR,CAAuB,IAAvB,CAA8BD,KAA9B,CAAsC,CAACsB,IAAI,CAAE,UAAP,CAAtC,CAA2D,aAA3D,CAHb,CAIEF,KAAK,EAAI,2BAAK,SAAS,CAAEb,KAAK,CAACgB,gBAAtB,EAAyCH,KAAzC,CAJX,CAKEH,UAAU,EAAI,2BAAK,GAAG,CAAEA,UAAV,EALhB,CAMEA,UAAU,EAAIhB,WAAW,CAAC,oBAAD,CAAuB,SAAvB,CAAkC,CAACC,QAAD,CAAlC,CAA8CF,KAA9C,CAAqD,EAArD,CAN3B,CAOC,+BAAK,yCAAL,CAPD,CAAP,CASH,CAXD,CAYA,GAAMwB,CAAAA,cAAc,CAAGzB,SAAS,CAAC,CAAC0B,IAAI,CAAE,OAAP,CAAD,CAAT,CAA2BP,SAA3B,CAAvB,CAEA,GAAMQ,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAChCV,UAAU,CAAEU,KAAK,CAACC,IAAN,CAAWX,UADS,CAEhCD,MAAM,CAAEW,KAAK,CAACC,IAAN,CAAWZ,MAFa,CAAZ,EAAxB,CAKA,cAAeZ,CAAAA,OAAO,CAACsB,eAAD,CAAmB,CAACrB,KAAK,CAALA,KAAD,CAAnB,CAAP,CAAmCG,KAAnC,CAAf","sourcesContent":["import React from 'react'\nimport {Field , reduxForm} from 'redux-form'\nimport { Input, createField } from '../common/FormsControl/FormsControls'\nimport {required , maxLengthCreator } from '../../utils/validators/validators'\nimport { connect } from 'react-redux'\nimport {login} from '../../redux/auth-reducer'\nimport { Redirect } from 'react-router-dom'\nimport style from '../common/FormsControl/FormControls.module.css'\n\nconst Login = (props) => {\n    const onSubmit = (formData) =>{\n        props.login(formData.email , formData.password , formData.rememberMe, formData.captcha)\n    }\n    if(props.isAuth){\n        return<Redirect to=\"/profile\"/>\n    }else{\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\n    </div>\n    }\n}\n\nconst LoginForm = ({handleSubmit , error , captchaUrl}) => {\n    const maxLength = maxLengthCreator(20)\n    return <form onSubmit={handleSubmit}>\n            {createField('Email' , \"email\" , [required , maxLength] , Input )}\n            {createField('Password' , \"password\" , [required , maxLength] , Input, {type: \"password\"})}\n            {createField(null , \"rememberMe\" , null , Input , {type: \"checkbox\"} , \"remember me\")}\n            {error && <div className={style.formSummaryError}>{error}</div>}\n            {captchaUrl && <img src={captchaUrl}/>}\n            {captchaUrl && createField(\"symbols from image\", \"captcha\", [required], Input, {} )}\n            <div><button>send</button></div>\n        </form>\n}\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst mapStateToProps = (state) => ({\n    captchaUrl: state.auth.captchaUrl,\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps , {login})(Login)"]},"metadata":{},"sourceType":"module"}