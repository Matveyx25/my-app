{"ast":null,"code":"var _jsxFileName = \"/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/Login/Login.jsx\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Input, createField } from '../common/FormsControl/FormsControls';\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\nimport { connect } from 'react-redux';\nimport { login } from '../../redux/auth-reducer';\nimport { Redirect } from 'react-router-dom';\nimport style from '../common/FormsControl/FormControls.module.css';\n\nconst Login = props => {\n  const onSubmit = formData => {\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n  };\n\n  if (props.isAuth) {\n    return React.createElement(Redirect, {\n      to: \"/profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Login\"), React.createElement(LoginReduxForm, {\n      onSubmit: onSubmit,\n      captchaUrl: props.captchaUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }));\n  }\n};\n\nconst LoginForm = ({\n  handleSubmit,\n  error,\n  captchaUrl\n}) => {\n  const maxLength = maxLengthCreator(20);\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, createField('Email', \"email\", [required, maxLength], Input), createField('Password', \"password\", [required, maxLength], Input, {\n    type: \"password\"\n  }), createField(null, \"rememberMe\", null, Input, {\n    type: \"checkbox\"\n  }, \"remember me\"), error && React.createElement(\"div\", {\n    className: style.formSummaryError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, error), captchaUrl && React.createElement(\"img\", {\n    src: captchaUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), captchaUrl && createField(\"symbols from image\", \"captcha\", [required], Input, {}), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"send\")));\n};\n\nconst LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n\nconst mapStateToProps = state => ({\n  captchaUrl: state.auth.captchaUrl,\n  isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);","map":{"version":3,"sources":["/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/Login/Login.jsx"],"names":["React","Field","reduxForm","Input","createField","required","maxLengthCreator","connect","login","Redirect","style","Login","props","onSubmit","formData","email","password","rememberMe","captcha","isAuth","captchaUrl","LoginForm","handleSubmit","error","maxLength","type","formSummaryError","LoginReduxForm","form","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Field , reduxForm} from 'redux-form'\nimport { Input, createField } from '../common/FormsControl/FormsControls'\nimport {required , maxLengthCreator } from '../../utils/validators/validators'\nimport { connect } from 'react-redux'\nimport {login} from '../../redux/auth-reducer'\nimport { Redirect } from 'react-router-dom'\nimport style from '../common/FormsControl/FormControls.module.css'\n\nconst Login = (props) => {\n    const onSubmit = (formData) =>{\n        props.login(formData.email , formData.password , formData.rememberMe, formData.captcha)\n    }\n    if(props.isAuth){\n        return<Redirect to=\"/profile\"/>\n    }else{\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\n    </div>\n    }\n}\n\nconst LoginForm = ({handleSubmit , error , captchaUrl}) => {\n    const maxLength = maxLengthCreator(20)\n    return <form onSubmit={handleSubmit}>\n        \n            {createField('Email' , \"email\" , [required , maxLength] , Input )}\n            {createField('Password' , \"password\" , [required , maxLength] , Input, {type: \"password\"})}\n            {createField(null , \"rememberMe\" , null , Input , {type: \"checkbox\"} , \"remember me\")}\n            {error && <div className={style.formSummaryError}>{error}</div>}\n            {captchaUrl && <img src={captchaUrl}/>}\n            {captchaUrl && createField(\"symbols from image\", \"captcha\", [required], Input, {} )}\n            <div><button>send</button></div>\n        </form>\n}\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst mapStateToProps = (state) => ({\n    captchaUrl: state.auth.captchaUrl,\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps , {login})(Login)"]},"metadata":{},"sourceType":"module"}