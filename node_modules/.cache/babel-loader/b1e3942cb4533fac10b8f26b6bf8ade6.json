{"ast":null,"code":"var _jsxFileName = \"/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/Dialogs/DialogsContainer.jsx\";\nimport Dialogs from './Dialogs';\nimport { addMessageActionCreator, updateNewMessageTextActionCreater } from '../../redux/dialogs-reduser';\nimport { connect } from 'react-redux';\n\nlet AuthRedirectComponent = props => {\n  if (!props.isAuth) return React.createElement(Redirect, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  });\n  return React.createElement(DialogsContainer, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }));\n};\n\nlet mapStateToProps = state => {\n  return {\n    dialogsPage: state.dialogsPage,\n    newMessageState: state.dialogsPage.newMessageState,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    updateNewMessageBody: text => {\n      dispatch(updateNewMessageTextActionCreater(text));\n    },\n    addMessage: () => {\n      dispatch(addMessageActionCreator());\n    }\n  };\n};\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default DialogsContainer;","map":{"version":3,"sources":["/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/Dialogs/DialogsContainer.jsx"],"names":["Dialogs","addMessageActionCreator","updateNewMessageTextActionCreater","connect","AuthRedirectComponent","props","isAuth","mapStateToProps","state","dialogsPage","newMessageState","auth","mapDispatchToProps","dispatch","updateNewMessageBody","text","addMessage","DialogsContainer"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,SAASC,uBAAT,EAAmCC,iCAAnC,QAA2E,6BAA3E;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,IAAIC,qBAAqB,GAAIC,KAAD,IAAW;AACnC,MAAG,CAACA,KAAK,CAACC,MAAV,EAAkB,OAAO,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAClB,SAAO,oBAAC,gBAAD,oBAAsBD,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH,CAHD;;AAKA,IAAIE,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAM;AACFC,IAAAA,WAAW,EAAGD,KAAK,CAACC,WADlB;AAEFC,IAAAA,eAAe,EAAEF,KAAK,CAACC,WAAN,CAAkBC,eAFjC;AAGFJ,IAAAA,MAAM,EAAEE,KAAK,CAACG,IAAN,CAAWL;AAHjB,GAAN;AAKH,CAND;;AAQA,IAAIM,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAM;AACFC,IAAAA,oBAAoB,EAAGC,IAAD,IAAU;AAC5BF,MAAAA,QAAQ,CAACX,iCAAiC,CAACa,IAAD,CAAlC,CAAR;AACH,KAHC;AAIFC,IAAAA,UAAU,EAAE,MAAM;AACdH,MAAAA,QAAQ,CAACZ,uBAAuB,EAAxB,CAAR;AACH;AANC,GAAN;AAQH,CATD;;AAWA,MAAMgB,gBAAgB,GAAGd,OAAO,CAACI,eAAD,EAAmBK,kBAAnB,CAAP,CAA8CZ,OAA9C,CAAzB;AAEA,eAAeiB,gBAAf","sourcesContent":["import Dialogs from './Dialogs';\nimport { addMessageActionCreator , updateNewMessageTextActionCreater} from '../../redux/dialogs-reduser';\nimport { connect } from 'react-redux';\n\nlet AuthRedirectComponent = (props) => {\n    if(!props.isAuth) return <Redirect to=\"/login\" />\n    return <DialogsContainer {...props}/>\n}\n\nlet mapStateToProps = (state) => {\n    return{\n        dialogsPage : state.dialogsPage, \n        newMessageState: state.dialogsPage.newMessageState,\n        isAuth: state.auth.isAuth\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return{\n        updateNewMessageBody: (text) => {\n            dispatch(updateNewMessageTextActionCreater(text));\n        },\n        addMessage: () => {\n            dispatch(addMessageActionCreator());\n        }\n    }\n}\n\nconst DialogsContainer = connect(mapStateToProps , mapDispatchToProps)(Dialogs);\n\nexport default DialogsContainer;"]},"metadata":{},"sourceType":"module"}