{"ast":null,"code":"var _jsxFileName = \"/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/App.js\";\nimport React from 'react';\nimport { Route, withRouter, BrowserRouter } from \"react-router-dom\";\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport Login from './components/Login/Login';\nimport { initialazeApp } from './redux/app-reducer';\nimport { connect, Provider } from 'react-redux';\nimport { compose } from 'redux';\nimport Preloader from './components/common/preloader/preloader';\nimport store from './redux/redux-store';\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initialazeApp();\n  }\n\n  render() {\n    if (!this.props.initialazed) {\n      return React.createElement(Preloader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"app-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(HeaderContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"app-wrapper-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/dialogs\",\n      render: () => React.createElement(DialogsContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/profile/:userId?\",\n      render: () => React.createElement(ProfileContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/users\",\n      render: () => React.createElement(UsersContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      render: () => React.createElement(Login, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  initialazed: state.app.initialazed\n});\n\nlet AppContainer = compose(withRouter, connect(mapStateToProps, {\n  initialazeApp\n}))(App);\n\nconst MainApp = props => {\n  return React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(AppContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })));\n};\n\nexport default MainApp;","map":{"version":3,"sources":["/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/App.js"],"names":["React","Route","withRouter","BrowserRouter","Navbar","Login","initialazeApp","connect","Provider","compose","Preloader","store","DialogsContainer","lazy","ProfileContainer","UsersContainer","HeaderContainer","App","Component","componentDidMount","props","render","initialazed","mapStateToProps","state","app","AppContainer","MainApp"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,UAAf,EAA2BC,aAA3B,QAA+C,kBAA/C;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,aAAlC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,SAAP,MAAsB,yCAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,MAAMC,gBAAgB,GAAGZ,KAAK,CAACa,IAAN,CAAW,MAAM,OAAQ,uCAAR,CAAjB,CAAzB;AACA,MAAMC,gBAAgB,GAAGd,KAAK,CAACa,IAAN,CAAW,MAAM,OAAQ,uCAAR,CAAjB,CAAzB;AACA,OAAOE,cAAP,MAA2B,mCAA3B;AACA,OAAOC,eAAP,MAA4B,qCAA5B;;AAEA,MAAMC,GAAN,SAAkBjB,KAAK,CAACkB,SAAxB,CAAkC;AAEhCC,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWd,aAAX;AACD;;AAEDe,EAAAA,MAAM,GAAG;AACP,QAAG,CAAC,KAAKD,KAAL,CAAWE,WAAf,EAA2B;AACzB,aAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,WACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,MAAM,EAAE,MAAM,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,mBAAZ;AAAgC,MAAA,MAAM,EAAE,MAAM,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,MAAM,EAAE,MAAM,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,MAAM,EAAE,MAAM,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAHF,CADJ;AAYD;;AAtB+B;;AAyBlC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCF,EAAAA,WAAW,EAAEE,KAAK,CAACC,GAAN,CAAUH;AADW,CAAZ,CAAxB;;AAIA,IAAII,YAAY,GAAGjB,OAAO,CAACP,UAAD,EAAcK,OAAO,CAACgB,eAAD,EAAmB;AAACjB,EAAAA;AAAD,CAAnB,CAArB,CAAP,CAAiEW,GAAjE,CAAnB;;AAEA,MAAMU,OAAO,GAAGP,KAAK,IAAI;AACvB,SAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAET,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADK,CAAP;AAKD,CAND;;AAQA,eAAegB,OAAf","sourcesContent":["import React from 'react'\nimport {Route, withRouter, BrowserRouter} from \"react-router-dom\"\nimport './App.css'\nimport Navbar from './components/Navbar/Navbar'\nimport Login from './components/Login/Login'\nimport { initialazeApp } from './redux/app-reducer'\nimport { connect, Provider } from 'react-redux'\nimport { compose } from 'redux'\nimport Preloader from './components/common/preloader/preloader'\nimport store from './redux/redux-store'\nconst DialogsContainer = React.lazy(() => import ('./components/Dialogs/DialogsContainer')) \nconst ProfileContainer = React.lazy(() => import ('./components/Profile/ProfileContainer'))\nimport UsersContainer from './components/Users/UsersContainer'\nimport HeaderContainer from './components/Header/HeaderContainer' \n\nclass App extends React.Component {\n  \n  componentDidMount(){\n    this.props.initialazeApp()\n  }\n  \n  render() {\n    if(!this.props.initialazed){\n      return <Preloader />\n    }\n    return (\n        <div className=\"app-wrapper\">\n          <HeaderContainer />\n          <Navbar />\n          <div className=\"app-wrapper-content\">\n            <Route path=\"/dialogs\" render={() => <DialogsContainer />} />\n            <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\n            <Route path=\"/users\" render={() => <UsersContainer />} />\n            <Route path=\"/login\" render={() => <Login />} />\n          </div>\n        </div>\n    )\n  } \n}\n  \nconst mapStateToProps = (state) => ({\n  initialazed: state.app.initialazed\n})\n\nlet AppContainer = compose(withRouter , connect(mapStateToProps , {initialazeApp}))(App)\n\nconst MainApp = props => {\n  return <BrowserRouter>\n    <Provider store={store}>\n      <AppContainer/>\n    </Provider>\n  </BrowserRouter>\n} \n\nexport default MainApp"]},"metadata":{},"sourceType":"module"}