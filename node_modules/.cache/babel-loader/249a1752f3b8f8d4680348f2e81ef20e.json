{"ast":null,"code":"import { authAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\nimport { getAuthUserData } from './auth-reducer';\nconst INITIALAZED_SUCCESS = 'INITIALAZED_SUCCESS';\nlet initialState = {\n  initialazed: false\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALAZED_SUCCESS:\n      return { ...state,\n        initialazed: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initialazedSuccess = () => ({\n  type: INITIALAZED_SUCCESS\n});\nexport const initialazeApp = () => dispatch => {\n  let promise = dispatch(getAuthUserData());\n  Promise.all([promise]).then(() => {\n    dispatch(initializedSuccess());\n  });\n};\nexport default appReducer;","map":{"version":3,"sources":["/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/redux/app-reducer.js"],"names":["authAPI","stopSubmit","getAuthUserData","INITIALAZED_SUCCESS","initialState","initialazed","appReducer","state","action","type","initialazedSuccess","initialazeApp","dispatch","promise","Promise","all","then","initializedSuccess"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,eAAT,QAAgC,gBAAhC;AAEA,MAAMC,mBAAmB,GAAG,qBAA5B;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAE;AADE,CAAnB;;AAIA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,mBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHF,QAAAA,WAAW,EAAE;AAFV,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAPR;AASH,CAVD;;AAaA,OAAO,MAAMG,kBAAkB,GAAG,OAAO;AAAED,EAAAA,IAAI,EAAEN;AAAR,CAAP,CAA3B;AAEP,OAAO,MAAMQ,aAAa,GAAG,MAAOC,QAAD,IAAc;AAC7C,MAAIC,OAAO,GAAGD,QAAQ,CAACV,eAAe,EAAhB,CAAtB;AAEAY,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,OAAD,CAAZ,EACKG,IADL,CACU,MAAM;AACRJ,IAAAA,QAAQ,CAACK,kBAAkB,EAAnB,CAAR;AACH,GAHL;AAIH,CAPM;AASP,eAAeX,UAAf","sourcesContent":["import { authAPI } from \"../api/api\"\nimport { stopSubmit } from \"redux-form\"\nimport { getAuthUserData } from './auth-reducer'\n\nconst INITIALAZED_SUCCESS = 'INITIALAZED_SUCCESS'\n\nlet initialState = {\n    initialazed: false,\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALAZED_SUCCESS:\n            return {\n                ...state,\n                initialazed: true,\n                }   \n        default:\n            return state;\n    }\n}\n\n\nexport const initialazedSuccess = () => ({ type: INITIALAZED_SUCCESS})\n\nexport const initialazeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());\n        })\n}\n\nexport default appReducer"]},"metadata":{},"sourceType":"module"}