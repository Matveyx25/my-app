{"ast":null,"code":"const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\nconst ADD_MESSAGE = 'ADD-MESSAGE';\nlet initialState = {\n  dialogs: [{\n    id: 1,\n    name: 'Alex'\n  }, {\n    id: 2,\n    name: 'Matvey'\n  }, {\n    id: 3,\n    name: 'Victor'\n  }, {\n    id: 4,\n    name: 'Sasha'\n  }, {\n    id: 5,\n    name: 'Artem'\n  }, {\n    id: 6,\n    name: 'Pasha'\n  }],\n  messages: [{\n    id: 1,\n    message: 'Hi',\n    author: 'me'\n  }, {\n    id: 2,\n    message: 'Hello',\n    author: 'other'\n  }, {\n    id: 3,\n    message: 'How are you',\n    author: 'me'\n  }, {\n    id: 3,\n    message: 'Good',\n    author: 'other'\n  }, {\n    id: 5,\n    message: 'And you',\n    author: 'other'\n  }, {\n    id: 6,\n    message: 'Good',\n    author: 'me'\n  }]\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_MESSAGE:\n      {\n        let newMessage = {\n          id: 6,\n          message: action.newMessageBody,\n          author: 'me'\n        };\n        let stateCopy = { ...state\n        };\n        stateCopy.messages = [...state.messages];\n        stateCopy.messages.push(newMessage);\n        stateCopy.newMessageState = '';\n        return stateCopy;\n      }\n\n    case UPDATE_NEW_MESSAGE_TEXT:\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.newMessageState = action.newText;\n        return stateCopy;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const updateNewMessageTextActionCreater = text => ({\n  type: UPDATE_NEW_MESSAGE_TEXT,\n  newText: text\n});\nexport const addMessageActionCreator = newMessageBody => ({\n  type: ADD_MESSAGE,\n  newMessageBody\n});\nexport default dialogsReducer;","map":{"version":3,"sources":["/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/redux/dialogs-reduser.js"],"names":["UPDATE_NEW_MESSAGE_TEXT","ADD_MESSAGE","initialState","dialogs","id","name","messages","message","author","dialogsReducer","state","action","type","newMessage","newMessageBody","stateCopy","push","newMessageState","newText","updateNewMessageTextActionCreater","text","addMessageActionCreator"],"mappings":"AAAA,MAAMA,uBAAuB,GAAG,yBAAhC;AACA,MAAMC,WAAW,GAAG,aAApB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,OAAO,EAAE,CACL;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GADK,EAEL;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAFK,EAGL;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAHK,EAIL;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAJK,EAKL;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GALK,EAML;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GANK,CADM;AASfC,EAAAA,QAAQ,EAAE,CACN;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,OAAO,EAAE,IAAlB;AAAwBC,IAAAA,MAAM,EAAE;AAAhC,GADM,EAEN;AAAEJ,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,OAAO,EAAE,OAAlB;AAA2BC,IAAAA,MAAM,EAAE;AAAnC,GAFM,EAGN;AAAEJ,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,OAAO,EAAE,aAAlB;AAAiCC,IAAAA,MAAM,EAAE;AAAzC,GAHM,EAIN;AAAEJ,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,OAAO,EAAE,MAAlB;AAA0BC,IAAAA,MAAM,EAAE;AAAlC,GAJM,EAKN;AAAEJ,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,OAAO,EAAE,SAAlB;AAA6BC,IAAAA,MAAM,EAAE;AAArC,GALM,EAMN;AAAEJ,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,OAAO,EAAE,MAAlB;AAA0BC,IAAAA,MAAM,EAAE;AAAlC,GANM;AATK,CAAnB;;AAmBA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAErD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,WAAL;AAAkB;AACd,YAAIY,UAAU,GAAG;AACbT,UAAAA,EAAE,EAAE,CADS;AAEbG,UAAAA,OAAO,EAAEI,MAAM,CAACG,cAFH;AAGbN,UAAAA,MAAM,EAAE;AAHK,SAAjB;AAKA,YAAIO,SAAS,GAAG,EAAC,GAAGL;AAAJ,SAAhB;AACAK,QAAAA,SAAS,CAACT,QAAV,GAAqB,CAAC,GAAGI,KAAK,CAACJ,QAAV,CAArB;AACAS,QAAAA,SAAS,CAACT,QAAV,CAAmBU,IAAnB,CAAwBH,UAAxB;AACAE,QAAAA,SAAS,CAACE,eAAV,GAA4B,EAA5B;AACA,eAAQF,SAAR;AACH;;AACD,SAAKf,uBAAL;AAA8B;AAC1B,YAAIe,SAAS,GAAG,EAAC,GAAGL;AAAJ,SAAhB;AACAK,QAAAA,SAAS,CAACE,eAAV,GAA4BN,MAAM,CAACO,OAAnC;AACA,eAAQH,SAAR;AACH;;AACD;AACI,aAAOL,KAAP;AAnBR;AAqBH,CAvBD;;AAyBA,OAAO,MAAMS,iCAAiC,GAAIC,IAAD,KAAW;AAACR,EAAAA,IAAI,EAAEZ,uBAAP;AAAgCkB,EAAAA,OAAO,EAAEE;AAAzC,CAAX,CAA1C;AACP,OAAO,MAAMC,uBAAuB,GAAIP,cAAD,KAAqB;AAACF,EAAAA,IAAI,EAAEX,WAAP;AAAqBa,EAAAA;AAArB,CAArB,CAAhC;AAEP,eAAeL,cAAf","sourcesContent":["const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\nconst ADD_MESSAGE = 'ADD-MESSAGE';\n\nlet initialState = {\n    dialogs: [\n        { id: 1, name: 'Alex' },\n        { id: 2, name: 'Matvey' },\n        { id: 3, name: 'Victor' },\n        { id: 4, name: 'Sasha' },\n        { id: 5, name: 'Artem' },\n        { id: 6, name: 'Pasha' }\n    ],\n    messages: [\n        { id: 1, message: 'Hi', author: 'me' },\n        { id: 2, message: 'Hello', author: 'other' },\n        { id: 3, message: 'How are you', author: 'me' },\n        { id: 3, message: 'Good', author: 'other' },\n        { id: 5, message: 'And you', author: 'other' },\n        { id: 6, message: 'Good', author: 'me' }\n    ]\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_MESSAGE: {\n            let newMessage = {\n                id: 6,\n                message: action.newMessageBody,\n                author: 'me'\n            };\n            let stateCopy = {...state};\n            stateCopy.messages = [...state.messages];\n            stateCopy.messages.push(newMessage);\n            stateCopy.newMessageState = '';\n            return  stateCopy;\n        }\n        case UPDATE_NEW_MESSAGE_TEXT: {\n            let stateCopy = {...state};\n            stateCopy.newMessageState = action.newText;\n            return  stateCopy;\n        }\n        default:\n            return state;\n    }\n}\n\nexport const updateNewMessageTextActionCreater = (text) => ({type: UPDATE_NEW_MESSAGE_TEXT, newText: text})\nexport const addMessageActionCreator = (newMessageBody) => ({type: ADD_MESSAGE , newMessageBody})\n\nexport default dialogsReducer;"]},"metadata":{},"sourceType":"module"}