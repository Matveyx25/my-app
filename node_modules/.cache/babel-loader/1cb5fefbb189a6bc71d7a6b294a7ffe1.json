{"ast":null,"code":"var _jsxFileName = \"/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/Profile/ProfileContainer.jsx\";\nimport React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = this.props.loginedUserId;\n\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentWillUpdate(prevProps, prevState, snapshot) {\n    if (this.props.match.params.userId != this.prevProps.match.params.userId) this.refreshProfile();\n  }\n\n  render() {\n    return React.createElement(Profile, Object.assign({}, this.props, {\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  loginedUserId: state.auth.id,\n  isAuth: state.auth.isAuth\n});\n\nexport default compose(connect(mapStateToProps, {\n  getUserProfile,\n  getStatus,\n  updateStatus\n}), withRouter, withAuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/Profile/ProfileContainer.jsx"],"names":["React","Profile","connect","getUserProfile","getStatus","updateStatus","withRouter","Redirect","withAuthRedirect","compose","ProfileContainer","Component","refreshProfile","userId","props","match","params","loginedUserId","history","push","componentDidMount","componentWillUpdate","prevProps","prevState","snapshot","render","profile","status","mapStateToProps","state","profilePage","auth","id","isAuth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAA0BC,SAA1B,EAAsCC,YAAtC,QAAyD,6BAAzD;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,kBAArC;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAGA,MAAMC,gBAAN,SAA+BV,KAAK,CAACW,SAArC,CAA+C;AAE3CC,EAAAA,cAAc,GAAG;AACb,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWG,aAApB;;AACA,UAAG,CAACJ,MAAJ,EAAY;AACR,aAAKC,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH;AACJ;;AACD,SAAKL,KAAL,CAAWX,cAAX,CAA0BU,MAA1B;AACA,SAAKC,KAAL,CAAWV,SAAX,CAAqBS,MAArB;AACH;;AAEDO,EAAAA,iBAAiB,GAAG;AACjB,SAAKR,cAAL;AACF;;AAEDS,EAAAA,mBAAmB,CAACC,SAAD,EAAaC,SAAb,EAAyBC,QAAzB,EAAmC;AAClD,QAAG,KAAKV,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAxB,IAAkC,KAAKS,SAAL,CAAeP,KAAf,CAAqBC,MAArB,CAA4BH,MAAjE,EACA,KAAKD,cAAL;AACH;;AAEDa,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,OAAD,oBAAa,KAAKX,KAAlB;AACA,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWY,OADpB;AAC6B,MAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWa,MADhD;AAEA,MAAA,YAAY,EAAE,KAAKb,KAAL,CAAWT,YAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAKH;;AA7B0C;;AAiC/C,IAAIuB,eAAe,GAAIC,KAAD,KAAY;AAC9BH,EAAAA,OAAO,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,OADG;AAE9BC,EAAAA,MAAM,EAAEE,KAAK,CAACC,WAAN,CAAkBH,MAFI;AAG9BV,EAAAA,aAAa,EAAEY,KAAK,CAACE,IAAN,CAAWC,EAHI;AAI9BC,EAAAA,MAAM,EAAEJ,KAAK,CAACE,IAAN,CAAWE;AAJW,CAAZ,CAAtB;;AAOA,eAAexB,OAAO,CAClBP,OAAO,CAAC0B,eAAD,EAAkB;AAAEzB,EAAAA,cAAF;AAAmBC,EAAAA,SAAnB;AAA+BC,EAAAA;AAA/B,CAAlB,CADW,EAElBC,UAFkB,EAGjBE,gBAHiB,CAAP,CAIbE,gBAJa,CAAf","sourcesContent":["import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { getUserProfile , getStatus , updateStatus} from '../../redux/profile-reducer'\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = this.props.loginedUserId\n            if(!userId) {\n                this.props.history.push(\"/login\")\n            }\n        }\n        this.props.getUserProfile(userId)\n        this.props.getStatus(userId)\n    }\n\n    componentDidMount() {\n       this.refreshProfile()\n    }\n\n    componentWillUpdate(prevProps , prevState , snapshot) {\n        if(this.props.match.params.userId != this.prevProps.match.params.userId)\n        this.refreshProfile()\n    }\n\n    render() {\n        return (\n            <Profile {...this.props} \n            profile={this.props.profile} status={this.props.status} \n            updateStatus={this.props.updateStatus}/>\n        )\n    }\n}\n\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    loginedUserId: state.auth.id,\n    isAuth: state.auth.isAuth\n})\n\nexport default compose(\n    connect(mapStateToProps, { getUserProfile , getStatus , updateStatus}),\n    withRouter,\n     withAuthRedirect\n)(ProfileContainer)\n"]},"metadata":{},"sourceType":"module"}