{"ast":null,"code":"import _slicedToArray from\"/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import s from'./Paginator.module.css';var Paginator=function Paginator(_ref){var totalItemsCount=_ref.totalItemsCount,pageSize=_ref.pageSize,portionsSize=_ref.portionsSize,currentPage=_ref.currentPage,onPageChange=_ref.onPageChange;var pagesCount=Math.ceil(totalItemsCount/pageSize);var pages=[];for(var i=1;i<=pagesCount;i++){pages.push(i);}var portionsCount=Math.ceil(pagesCount/portionsSize);var _useState=useState(1),_useState2=_slicedToArray(_useState,2),portionNumber=_useState2[0],setPortionNumber=_useState2[1];var leftPortionPageNumber=(portionNumber-1)*portionsSize+1;var rightPortionPageNumber=portionNumber*portionsSize;return React.createElement(\"div\",{className:s.currentWrap},portionNumber>1&&React.createElement(\"button\",{className:s.btnScroll,onClick:function onClick(){return setPortionNumber(portionNumber-1);}},\"PREV\"),pages.filter(function(p){return p>=leftPortionPageNumber&&p<=rightPortionPageNumber;}).map(function(p){return React.createElement(\"span\",{className:currentPage===p&&s.selectedPage,onClick:function onClick(e){onPageChange(p);}},p);}),portionsCount>portionNumber&&React.createElement(\"button\",{className:s.btnScroll,onClick:function onClick(){return setPortionNumber(portionNumber+1);}},\"NEXT\"));};export default Paginator;","map":{"version":3,"sources":["/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/common/Paginator/Paginator.jsx"],"names":["React","useState","s","Paginator","totalItemsCount","pageSize","portionsSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","i","push","portionsCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","currentWrap","btnScroll","filter","p","map","selectedPage","e"],"mappings":"mJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,CAAP,KAAc,wBAAd,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA8E,IAA5EC,CAAAA,eAA4E,MAA5EA,eAA4E,CAA1DC,QAA0D,MAA1DA,QAA0D,CAA/CC,YAA+C,MAA/CA,YAA+C,CAAhCC,WAAgC,MAAhCA,WAAgC,CAAlBC,YAAkB,MAAlBA,YAAkB,CAE5F,GAAIC,CAAAA,UAAU,CAAGC,IAAI,CAACC,IAAL,CAAUP,eAAe,CAAGC,QAA5B,CAAjB,CAEA,GAAIO,CAAAA,KAAK,CAAG,EAAZ,CAEA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAIJ,UAArB,CAAiCI,CAAC,EAAlC,CAAsC,CAClCD,KAAK,CAACE,IAAN,CAAWD,CAAX,EACH,CAED,GAAIE,CAAAA,aAAa,CAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,CAAGH,YAAvB,CAApB,CAV4F,cAWnDL,QAAQ,CAAC,CAAD,CAX2C,wCAWvFe,aAXuF,eAWvEC,gBAXuE,eAY5F,GAAIC,CAAAA,qBAAqB,CAAG,CAACF,aAAa,CAAG,CAAjB,EAAsBV,YAAtB,CAAqC,CAAjE,CACA,GAAIa,CAAAA,sBAAsB,CAAGH,aAAa,CAAGV,YAA7C,CAEA,MAAQ,4BAAK,SAAS,CAAEJ,CAAC,CAACkB,WAAlB,EACCJ,aAAa,CAAG,CAAhB,EACA,8BAAQ,SAAS,CAAEd,CAAC,CAACmB,SAArB,CACC,OAAO,CAAE,yBAAMJ,CAAAA,gBAAgB,CAACD,aAAa,CAAG,CAAjB,CAAtB,EADV,SAFD,CAKCJ,KAAK,CACLU,MADA,CACO,SAAAC,CAAC,QAAIA,CAAAA,CAAC,EACTL,qBADQ,EAERK,CAAC,EAAIJ,sBAFD,EADR,EAIAK,GAJA,CAII,SAAAD,CAAC,CAAI,CACN,MAAO,6BAAM,SAAS,CAAEhB,WAAW,GAAKgB,CAAhB,EAChBrB,CAAC,CAACuB,YADH,CAEH,OAAO,CAAE,iBAACC,CAAD,CAAO,CAAElB,YAAY,CAACe,CAAD,CAAZ,CAAiB,CAFhC,EAGFA,CAHE,CAAP,CAIH,CATA,CALD,CAeCR,aAAa,CAAGC,aAAhB,EACD,8BAAQ,SAAS,CAAEd,CAAC,CAACmB,SAArB,CACC,OAAO,CAAE,yBAAMJ,CAAAA,gBAAgB,CAACD,aAAa,CAAG,CAAjB,CAAtB,EADV,SAhBA,CAAR,CAoBH,CAnCD,CAqCA,cAAeb,CAAAA,SAAf","sourcesContent":["import React, { useState } from 'react'\nimport s from './Paginator.module.css'\n\nconst Paginator = ({totalItemsCount , pageSize , portionsSize , currentPage , onPageChange}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\n\n    let pages = [];\n\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionsCount = Math.ceil(pagesCount / portionsSize)\n    let [portionNumber , setPortionNumber] = useState(1)\n    let leftPortionPageNumber = (portionNumber - 1) * portionsSize + 1\n    let rightPortionPageNumber = portionNumber * portionsSize\n\n    return  <div className={s.currentWrap}>\n            {portionNumber > 1 &&\n             <button className={s.btnScroll} \n              onClick={() => setPortionNumber(portionNumber - 1)}>\n                  PREV</button>}\n            {pages\n            .filter(p => p >=\n                 leftPortionPageNumber && \n                 p <= rightPortionPageNumber)\n            .map(p => {\n                return <span className={currentPage === p\n                     && s.selectedPage}\n                    onClick={(e) => { onPageChange(p) }}>\n                    {p}</span>\n            })}\n            {portionsCount > portionNumber && \n            <button className={s.btnScroll}\n             onClick={() => setPortionNumber(portionNumber + 1)}>\n                 NEXT</button>}\n        </div>\n}\n\nexport default Paginator"]},"metadata":{},"sourceType":"module"}