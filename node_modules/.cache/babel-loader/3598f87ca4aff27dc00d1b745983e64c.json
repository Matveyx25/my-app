{"ast":null,"code":"import { authAPI } from \"../api/api\";\nconst SET_USER_DATA = 'SET_USER_DATA';\nlet initialState = {\n  usersId: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return { ...state,\n        ...action.data,\n        isAuth: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setAuthUserData = (id, email, login) => ({\n  type: SET_USER_DATA,\n  data: {\n    id,\n    email,\n    login\n  }\n});\nexport const getAuthUserData = () => dispatch => {\n  authAPI.me().then(response => {\n    if (response.data.resultCode === 0) {\n      let {\n        id,\n        email,\n        login\n      } = response.data.data;\n      dispatch(setAuthUserData(id, email, login));\n    }\n  });\n};\nexport const login = (email, password, rememberMe) => dispatch => {\n  authAPI.login(email, password, rememberMe).then(response => {\n    if (response.data.resultCode === 0) {\n      let {\n        id,\n        email,\n        login\n      } = response.data.data;\n      dispatch(setAuthUserData(id, email, login));\n    }\n  });\n};\nexport default authReducer;","map":{"version":3,"sources":["/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/redux/auth-reducer.js"],"names":["authAPI","SET_USER_DATA","initialState","usersId","email","login","isAuth","authReducer","state","action","type","data","setAuthUserData","id","getAuthUserData","dispatch","me","then","response","resultCode","password","rememberMe"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AAEA,MAAMC,aAAa,GAAG,eAAtB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,OAAO,EAAE,IADM;AAEfC,EAAAA,KAAK,EAAE,IAFQ;AAGfC,EAAAA,KAAK,EAAE,IAHQ;AAIfC,EAAAA,MAAM,EAAE;AAJO,CAAnB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,aAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEH,WAAGC,MAAM,CAACE,IAFP;AAGHL,QAAAA,MAAM,EAAE;AAHL,OAAP;;AAKJ;AACI,aAAOE,KAAP;AARR;AAUH,CAXD;;AAcA,OAAO,MAAMI,eAAe,GAAG,CAACC,EAAD,EAAMT,KAAN,EAAcC,KAAd,MAAyB;AAAEK,EAAAA,IAAI,EAAET,aAAR;AAAuBU,EAAAA,IAAI,EAAE;AAACE,IAAAA,EAAD;AAAKT,IAAAA,KAAL;AAAYC,IAAAA;AAAZ;AAA7B,CAAzB,CAAxB;AAEP,OAAO,MAAMS,eAAe,GAAG,MAAOC,QAAD,IAAc;AAC/Cf,EAAAA,OAAO,CAACgB,EAAR,GAAaC,IAAb,CAAkBC,QAAQ,IAAI;AAC1B,QAAGA,QAAQ,CAACP,IAAT,CAAcQ,UAAd,KAA6B,CAAhC,EAAkC;AAC9B,UAAI;AAACN,QAAAA,EAAD;AAAMT,QAAAA,KAAN;AAAcC,QAAAA;AAAd,UAAuBa,QAAQ,CAACP,IAAT,CAAcA,IAAzC;AACAI,MAAAA,QAAQ,CAACH,eAAe,CAACC,EAAD,EAAMT,KAAN,EAAcC,KAAd,CAAhB,CAAR;AACH;AACJ,GALD;AAMH,CAPM;AASP,OAAO,MAAMA,KAAK,GAAG,CAACD,KAAD,EAASgB,QAAT,EAAoBC,UAApB,KAAoCN,QAAD,IAAc;AAClEf,EAAAA,OAAO,CAACK,KAAR,CAAcD,KAAd,EAAqBgB,QAArB,EAA+BC,UAA/B,EAA2CJ,IAA3C,CAAgDC,QAAQ,IAAI;AACxD,QAAGA,QAAQ,CAACP,IAAT,CAAcQ,UAAd,KAA6B,CAAhC,EAAkC;AAC9B,UAAI;AAACN,QAAAA,EAAD;AAAMT,QAAAA,KAAN;AAAcC,QAAAA;AAAd,UAAuBa,QAAQ,CAACP,IAAT,CAAcA,IAAzC;AACAI,MAAAA,QAAQ,CAACH,eAAe,CAACC,EAAD,EAAMT,KAAN,EAAcC,KAAd,CAAhB,CAAR;AACH;AACJ,GALD;AAMH,CAPM;AASP,eAAeE,WAAf","sourcesContent":["import { authAPI } from \"../api/api\";\n\nconst SET_USER_DATA = 'SET_USER_DATA'\n\nlet initialState = {\n    usersId: null,\n    email: null,\n    login: null,\n    isAuth: false\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.data,\n                isAuth: true\n                }   \n        default:\n            return state;\n    }\n}\n\n\nexport const setAuthUserData = (id , email , login) => ({ type: SET_USER_DATA, data: {id, email, login}})\n\nexport const getAuthUserData = () => (dispatch) => {\n    authAPI.me().then(response => {\n        if(response.data.resultCode === 0){\n            let {id , email , login} = response.data.data\n            dispatch(setAuthUserData(id , email , login))\n        }\n    })\n}\n\nexport const login = (email , password , rememberMe) => (dispatch) => {\n    authAPI.login(email, password, rememberMe).then(response => {\n        if(response.data.resultCode === 0){\n            let {id , email , login} = response.data.data\n            dispatch(setAuthUserData(id , email , login))\n        }\n    })\n}\n\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}