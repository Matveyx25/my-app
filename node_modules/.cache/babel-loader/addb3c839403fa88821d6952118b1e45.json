{"ast":null,"code":"import React from'react';import s from\"./Dialogs.module.css\";import DialogItem from'./DilogItem/DialogItems';import Message from'./Message/Message';import{addMessageActionCreator,updateNewMessageTextActionCreater}from'../../redux/dialogs-reduser';import{Field,reduxForm}from'redux-form';import{Redirect}from'react-router-dom';import{required,maxLengthCreator}from'../../utils/validators/validators';import{Textarea}from'../common/FormsControl/FormsControls';var Dialogs=function Dialogs(props){var state=props.dialogsPage;var dialogsElements=state.dialogs.map(function(d){return React.createElement(DialogItem,{name:d.name,id:d.id});});var messageElements=state.messages.map(function(m){return React.createElement(Message,{message:m.message,author:m.author});});var addNewMessage=function addNewMessage(values){props.addMessage(values.newMessageBody);};if(!props.isAuth)return React.createElement(Redirect,{to:\"/login\"});return React.createElement(\"div\",{className:s.dialogs},React.createElement(\"div\",{className:s.dialogs_items},dialogsElements),React.createElement(\"div\",{className:s.messages},messageElements,React.createElement(AddMessageFormRedux,{onSubmit:addNewMessage})));};var maxLength=maxLengthCreator(100);var AddMessageForm=function AddMessageForm(props){return React.createElement(\"form\",{onSubmit:props.handleSubmit},React.createElement(Field,{component:Textarea,name:\"newMessageBody\",placeholder:\"New message\",validate:[required,maxLength]}),React.createElement(\"button\",null,\"send\"));};var AddMessageFormRedux=reduxForm({form:\"dialogAddMessageForm\"})(AddMessageForm);export default Dialogs;","map":{"version":3,"sources":["/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/Dialogs/Dialogs.jsx"],"names":["React","s","DialogItem","Message","addMessageActionCreator","updateNewMessageTextActionCreater","Field","reduxForm","Redirect","required","maxLengthCreator","Textarea","Dialogs","props","state","dialogsPage","dialogsElements","dialogs","map","d","name","id","messageElements","messages","m","message","author","addNewMessage","values","addMessage","newMessageBody","isAuth","dialogs_items","maxLength","AddMessageForm","handleSubmit","AddMessageFormRedux","form"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,CAAP,KAAc,sBAAd,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAASC,uBAAT,CAAkCC,iCAAlC,KAA2E,6BAA3E,CACA,OAAQC,KAAR,CAAgBC,SAAhB,KAAgC,YAAhC,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,OAAQC,QAAR,CAAmBC,gBAAnB,KAA0C,mCAA1C,CACA,OAASC,QAAT,KAAyB,sCAAzB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CAEvB,GAAIC,CAAAA,KAAK,CAAGD,KAAK,CAACE,WAAlB,CAEA,GAAIC,CAAAA,eAAe,CAAGF,KAAK,CAACG,OAAN,CAAcC,GAAd,CAAkB,SAAAC,CAAC,QAAI,qBAAC,UAAD,EAAY,IAAI,CAAEA,CAAC,CAACC,IAApB,CAA0B,EAAE,CAAED,CAAC,CAACE,EAAhC,EAAJ,EAAnB,CAAtB,CACA,GAAIC,CAAAA,eAAe,CAAGR,KAAK,CAACS,QAAN,CAAeL,GAAf,CAAmB,SAAAM,CAAC,QAAI,qBAAC,OAAD,EAAS,OAAO,CAAEA,CAAC,CAACC,OAApB,CAA6B,MAAM,CAAED,CAAC,CAACE,MAAvC,EAAJ,EAApB,CAAtB,CAEA,GAAIC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,MAAD,CAAY,CAC5Bf,KAAK,CAACgB,UAAN,CAAiBD,MAAM,CAACE,cAAxB,EACH,CAFD,CAGA,GAAG,CAACjB,KAAK,CAACkB,MAAV,CAAkB,MAAO,qBAAC,QAAD,EAAU,EAAE,CAAE,QAAd,EAAP,CAClB,MACI,4BAAK,SAAS,CAAE9B,CAAC,CAACgB,OAAlB,EACI,2BAAK,SAAS,CAAEhB,CAAC,CAAC+B,aAAlB,EACKhB,eADL,CADJ,CAII,2BAAK,SAAS,CAAEf,CAAC,CAACsB,QAAlB,EACKD,eADL,CAEI,oBAAC,mBAAD,EAAqB,QAAQ,CAAEK,aAA/B,EAFJ,CAJJ,CADJ,CAWH,CAtBD,CAwBA,GAAMM,CAAAA,SAAS,CAAGvB,gBAAgB,CAAC,GAAD,CAAlC,CAEA,GAAMwB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACrB,KAAD,CAAW,CAC9B,MAAO,6BAAM,QAAQ,CAAEA,KAAK,CAACsB,YAAtB,EACC,oBAAC,KAAD,EAAO,SAAS,CAAExB,QAAlB,CACC,IAAI,CAAC,gBADN,CAEC,WAAW,CAAC,aAFb,CAGC,QAAQ,CAAE,CAACF,QAAD,CAAYwB,SAAZ,CAHX,EADD,CAKC,yCALD,CAAP,CAOH,CARD,CAWA,GAAMG,CAAAA,mBAAmB,CAAG7B,SAAS,CAAC,CAAC8B,IAAI,CAAE,sBAAP,CAAD,CAAT,CAA0CH,cAA1C,CAA5B,CAEA,cAAetB,CAAAA,OAAf","sourcesContent":["import React from 'react'\nimport s from \"./Dialogs.module.css\"\nimport DialogItem from './DilogItem/DialogItems'\nimport Message from './Message/Message'\nimport { addMessageActionCreator, updateNewMessageTextActionCreater } from '../../redux/dialogs-reduser';\nimport {Field , reduxForm} from 'redux-form'\nimport { Redirect } from 'react-router-dom';\nimport {required , maxLengthCreator} from '../../utils/validators/validators'\nimport { Textarea } from '../common/FormsControl/FormsControls';\n\nconst Dialogs = (props) => {\n\n    let state = props.dialogsPage;\n\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} />);\n    let messageElements = state.messages.map(m => <Message message={m.message} author={m.author} />);\n\n    let addNewMessage = (values) => {\n        props.addMessage(values.newMessageBody)\n    }   \n    if(!props.isAuth) return <Redirect to={\"/login\"}/>\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogs_items}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                {messageElements}\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\n            </div>\n        </div>\n    )\n}\n\nconst maxLength = maxLengthCreator(100)\n\nconst AddMessageForm = (props) => {\n    return <form onSubmit={props.handleSubmit}>\n            <Field component={Textarea}\n             name=\"newMessageBody\" \n             placeholder=\"New message\"\n             validate={[required , maxLength]}/>\n            <button>send</button>\n            </form>\n}\n\n\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\n\nexport default Dialogs"]},"metadata":{},"sourceType":"module"}