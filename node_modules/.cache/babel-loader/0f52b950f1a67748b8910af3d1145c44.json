{"ast":null,"code":"import { usersAPI } from \"../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_STATUS = 'SET-STATUS';\nlet initialState = {\n  postsData: [{\n    id: 1,\n    message: 'Hi',\n    likequantity: 23\n  }, {\n    id: 2,\n    message: 'Hello',\n    likequantity: 23\n  }, {\n    id: 3,\n    message: 'you',\n    likequantity: 23\n  }, {\n    id: 3,\n    message: 'Yo',\n    likequantity: 23\n  }, {\n    id: 5,\n    message: 'Good bay',\n    likequantity: 23\n  }, {\n    id: 6,\n    message: 'Lose',\n    likequantity: 23\n  }],\n  newPostState: '',\n  profile: null,\n  status: \"\"\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 8,\n          message: state.newPostState,\n          likequantity: 0\n        };\n        let stateCopy = { ...state\n        };\n        stateCopy.postsData = [...state.postsData];\n        stateCopy.postsData.push(newPost);\n        stateCopy.newPostState = '';\n        return stateCopy;\n      }\n\n    case UPDATE_NEW_POST_TEXT:\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.newPostState = action.newText;\n        return stateCopy;\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreater = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostTextActionCreater = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const getUserProfile = userId => dispatch => {\n  usersAPI.getProfile(userId).then(response => {\n    dispatch(setUserProfile(response.data));\n  });\n};\nexport default profileReducer;","map":{"version":3,"sources":["/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/redux/profile-reducer.js"],"names":["usersAPI","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","initialState","postsData","id","message","likequantity","newPostState","profile","status","profileReducer","state","action","type","newPost","stateCopy","push","newText","addPostActionCreater","updateNewPostTextActionCreater","text","setUserProfile","getUserProfile","userId","dispatch","getProfile","then","response","data"],"mappings":"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","sourcesContent":["import { usersAPI } from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE'\nconst SET_STATUS = 'SET-STATUS'\n\nlet initialState = {\n    postsData: [\n        { id: 1, message: 'Hi', likequantity: 23 },\n        { id: 2, message: 'Hello', likequantity: 23 },\n        { id: 3, message: 'you', likequantity: 23 },\n        { id: 3, message: 'Yo', likequantity: 23 },\n        { id: 5, message: 'Good bay', likequantity: 23 },\n        { id: 6, message: 'Lose', likequantity: 23 }\n    ],\n    newPostState: '', \n    profile: null,\n    status: \"\",\n};\n\nconst profileReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_POST:{\n            let newPost = {\n                id: 8,\n                message: state.newPostState,\n                likequantity: 0\n            };\n            let stateCopy = {...state};\n            stateCopy.postsData = [...state.postsData];\n            stateCopy.postsData.push(newPost);\n            stateCopy.newPostState = '';\n            return stateCopy;\n        }\n        case UPDATE_NEW_POST_TEXT:{\n            let stateCopy = {...state};\n            stateCopy.newPostState = action.newText;\n            return  stateCopy;\n        }\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile}\n        }\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile}\n        }\n        default:\n            return state;\n    }\n}\n\nexport const addPostActionCreater = () => ({type: ADD_POST});\nexport const updateNewPostTextActionCreater = (text) => ({type: UPDATE_NEW_POST_TEXT, newText: text});\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\n\n\nexport const getUserProfile = (userId) => (dispatch) => {\n    usersAPI.getProfile(userId).then(response => {\n                dispatch(setUserProfile(response.data))\n            })\n};\n\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}