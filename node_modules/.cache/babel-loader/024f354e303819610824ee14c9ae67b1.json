{"ast":null,"code":"import React from'react';import{Field,reduxForm}from'redux-form';import{Input,createField}from'../common/FormsControl/FormsControls';import{required,maxLengthCreator}from'../../utils/validators/validators';import{connect}from'react-redux';import{login}from'../../redux/auth-reducer';import{Redirect}from'react-router-dom';import style from'../common/FormsControl/FormControls.module.css';var maxLength=maxLengthCreator(20);var Login=function Login(props){var onSubmit=function onSubmit(formData){props.login(formData.email,formData.password,formData.rememberMe);};if(props.isAuth){return React.createElement(Redirect,{to:\"/profile\"});}else{return React.createElement(\"div\",null,React.createElement(\"h1\",null,\"Login\"),React.createElement(LoginReduxForm,{onSubmit:onSubmit}));}};var LoginForm=function LoginForm(_ref){var handleSubmit=_ref.handleSubmit,error=_ref.error;return React.createElement(\"form\",{onSubmit:handleSubmit},createField('Email',\"email\",[required,maxLength],Input),createField('Password',\"password\",[required,maxLength],Input,{type:\"password\"}),createField(null,\"rememberMe\",null,Input,{type:\"checkbox\"},\"remember me\"),error&&React.createElement(\"div\",{className:style.formSummaryError},error),React.createElement(\"div\",null,React.createElement(\"button\",null,\"send\")));};var LoginReduxForm=reduxForm({form:'login'})(LoginForm);var mapStateToProps=function mapStateToProps(state){return{isAuth:state.auth.isAuth};};export default connect(mapStateToProps,{login:login})(Login);","map":{"version":3,"sources":["/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/Login/Login.jsx"],"names":["React","Field","reduxForm","Input","createField","required","maxLengthCreator","connect","login","Redirect","style","maxLength","Login","props","onSubmit","formData","email","password","rememberMe","isAuth","LoginForm","handleSubmit","error","type","formSummaryError","LoginReduxForm","form","mapStateToProps","state","auth"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,KAAR,CAAgBC,SAAhB,KAAgC,YAAhC,CACA,OAASC,KAAT,CAAgBC,WAAhB,KAAmC,sCAAnC,CACA,OAAQC,QAAR,CAAmBC,gBAAnB,KAA2C,mCAA3C,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAAQC,KAAR,KAAoB,0BAApB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,gDAAlB,CAEA,GAAMC,CAAAA,SAAS,CAAGL,gBAAgB,CAAC,EAAD,CAAlC,CACA,GAAMM,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CACrB,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAa,CAC1BF,KAAK,CAACL,KAAN,CAAYO,QAAQ,CAACC,KAArB,CAA6BD,QAAQ,CAACE,QAAtC,CAAiDF,QAAQ,CAACG,UAA1D,EACH,CAFD,CAGA,GAAGL,KAAK,CAACM,MAAT,CAAgB,CACZ,MAAM,qBAAC,QAAD,EAAU,EAAE,CAAC,UAAb,EAAN,CACH,CAFD,IAEK,CACL,MAAO,gCACH,sCADG,CAEH,oBAAC,cAAD,EAAgB,QAAQ,CAAEL,QAA1B,EAFG,CAAP,CAIC,CACJ,CAZD,CAcA,GAAMM,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA4B,IAA1BC,CAAAA,YAA0B,MAA1BA,YAA0B,CAAXC,KAAW,MAAXA,KAAW,CAC1C,MAAO,6BAAM,QAAQ,CAAED,YAAhB,EACEjB,WAAW,CAAC,OAAD,CAAW,OAAX,CAAqB,CAACC,QAAD,CAAYM,SAAZ,CAArB,CAA8CR,KAA9C,CADb,CAEEC,WAAW,CAAC,UAAD,CAAc,UAAd,CAA2B,CAACC,QAAD,CAAYM,SAAZ,CAA3B,CAAoDR,KAApD,CAA2D,CAACoB,IAAI,CAAE,UAAP,CAA3D,CAFb,CAGEnB,WAAW,CAAC,IAAD,CAAQ,YAAR,CAAuB,IAAvB,CAA8BD,KAA9B,CAAsC,CAACoB,IAAI,CAAE,UAAP,CAAtC,CAA2D,aAA3D,CAHb,CAIED,KAAK,EAAI,2BAAK,SAAS,CAAEZ,KAAK,CAACc,gBAAtB,EAAyCF,KAAzC,CAJX,CAKC,+BAAK,yCAAL,CALD,CAAP,CAOH,CARD,CASA,GAAMG,CAAAA,cAAc,CAAGvB,SAAS,CAAC,CAACwB,IAAI,CAAE,OAAP,CAAD,CAAT,CAA2BN,SAA3B,CAAvB,CAEA,GAAMO,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAChCT,MAAM,CAAES,KAAK,CAACC,IAAN,CAAWV,MADa,CAAZ,EAAxB,CAIA,cAAeZ,CAAAA,OAAO,CAACoB,eAAD,CAAmB,CAACnB,KAAK,CAALA,KAAD,CAAnB,CAAP,CAAmCI,KAAnC,CAAf","sourcesContent":["import React from 'react'\nimport {Field , reduxForm} from 'redux-form'\nimport { Input, createField } from '../common/FormsControl/FormsControls'\nimport {required , maxLengthCreator } from '../../utils/validators/validators'\nimport { connect } from 'react-redux'\nimport {login} from '../../redux/auth-reducer'\nimport { Redirect } from 'react-router-dom'\nimport style from '../common/FormsControl/FormControls.module.css'\n\nconst maxLength = maxLengthCreator(20)\nconst Login = (props) => {\n    const onSubmit = (formData) =>{\n        props.login(formData.email , formData.password , formData.rememberMe)\n    }\n    if(props.isAuth){\n        return<Redirect to=\"/profile\"/>\n    }else{\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit}/>\n    </div>\n    }\n}\n\nconst LoginForm = ({handleSubmit , error}) => {\n    return <form onSubmit={handleSubmit}>\n            {createField('Email' , \"email\" , [required , maxLength] , Input )}\n            {createField('Password' , \"password\" , [required , maxLength] , Input, {type: \"password\"})}\n            {createField(null , \"rememberMe\" , null , Input , {type: \"checkbox\"} , \"remember me\")}\n            {error && <div className={style.formSummaryError}>{error}</div>}\n            <div><button>send</button></div>\n        </form>\n}\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps , {login})(Login)"]},"metadata":{},"sourceType":"module"}