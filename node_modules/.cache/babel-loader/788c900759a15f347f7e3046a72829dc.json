{"ast":null,"code":"var _jsxFileName = \"/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/Users/UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Users from './Users';\nimport Preloader from '../common/preloader/preloader.js';\nimport { follow, unfollow, setCurrentPage, toggleIsFetching, toggleFollowingProgress, requestUsers } from '../../redux/users-reduser';\nimport { getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getFetching, getFollowinginProgress } from '../../redux/users-selectors';\n\nclass UsersAPIComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChange = pageNumber => {\n      this.props.requestUsers(pageNumber, this.props.pageSize);\n    };\n  }\n\n  componentDidMount() {\n    this.props.requestUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.isFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }) : null, React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChange: this.onPageChange,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      toggleFollowingProgress: this.props.toggleFollowingProgress,\n      followingInProgress: this.props.followingInProgress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getFetching(state),\n    followingInProgress: getFollowinginProgress(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setCurrentPage,\n  toggleIsFetching,\n  toggleFollowingProgress,\n  requestUsers\n})(UsersAPIComponent);","map":{"version":3,"sources":["/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/Users/UsersContainer.jsx"],"names":["React","connect","Users","Preloader","follow","unfollow","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","getUsers","getPageSize","getTotalUsersCount","getCurrentPage","getFetching","getFollowinginProgress","UsersAPIComponent","Component","onPageChange","pageNumber","props","pageSize","componentDidMount","currentPage","render","isFetching","totalUsersCount","users","followingInProgress","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,cAA3B,EAA2CC,gBAA3C,EAA6DC,uBAA7D,EAAsFC,YAAtF,QAA0G,2BAA1G;AACA,SAASC,QAAT,EAAoBC,WAApB,EAAkCC,kBAAlC,EAAuDC,cAAvD,EAAwEC,WAAxE,EAAsFC,sBAAtF,QAAmH,6BAAnH;;AAGA,MAAMC,iBAAN,SAAgChB,KAAK,CAACiB,SAAtC,CAAgD;AAAA;AAAA;;AAAA,SAQ5CC,YAR4C,GAQ5BC,UAAD,IAAgB;AAC3B,WAAKC,KAAL,CAAWX,YAAX,CAAwBU,UAAxB,EAAoC,KAAKC,KAAL,CAAWC,QAA/C;AACH,KAV2C;AAAA;;AAE5CC,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,KAAL,CAAWX,YAAX,CAAwB,KAAKW,KAAL,CAAWG,WAAnC,EAAgD,KAAKH,KAAL,CAAWC,QAA3D;AACH;;AAQDG,EAAAA,MAAM,GAAG;AACL,WAAO,0CACF,KAAKJ,KAAL,CAAWK,UAAX,GACG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAEK,IAHH,EAIH,oBAAC,KAAD;AACI,MAAA,eAAe,EAAE,KAAKL,KAAL,CAAWM,eADhC;AAEI,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWC,QAFzB;AAGI,MAAA,WAAW,EAAE,KAAKD,KAAL,CAAWG,WAH5B;AAII,MAAA,YAAY,EAAE,KAAKL,YAJvB;AAKI,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWO,KALtB;AAMI,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWhB,MANvB;AAOI,MAAA,QAAQ,EAAE,KAAKgB,KAAL,CAAWf,QAPzB;AAQI,MAAA,uBAAuB,EAAE,KAAKe,KAAL,CAAWZ,uBARxC;AASI,MAAA,mBAAmB,EAAE,KAAKY,KAAL,CAAWQ,mBATpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJG,CAAP;AAgBH;;AA7B2C;;AAgChD,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHH,IAAAA,KAAK,EAAEjB,QAAQ,CAACoB,KAAD,CADZ;AAEHT,IAAAA,QAAQ,EAAEV,WAAW,CAACmB,KAAD,CAFlB;AAGHJ,IAAAA,eAAe,EAAEd,kBAAkB,CAACkB,KAAD,CAHhC;AAIHP,IAAAA,WAAW,EAAEV,cAAc,CAACiB,KAAD,CAJxB;AAKHL,IAAAA,UAAU,EAAEX,WAAW,CAACgB,KAAD,CALpB;AAMHF,IAAAA,mBAAmB,EAAEb,sBAAsB,CAACe,KAAD;AANxC,GAAP;AAQH,CATD;;AAWA,eAAe7B,OAAO,CAAC4B,eAAD,EAAkB;AAAEzB,EAAAA,MAAF;AAAWC,EAAAA,QAAX;AAAsBC,EAAAA,cAAtB;AAAuCC,EAAAA,gBAAvC;AAA0DC,EAAAA,uBAA1D;AAAoFC,EAAAA;AAApF,CAAlB,CAAP,CAA6HO,iBAA7H,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport Users from './Users'\nimport Preloader from '../common/preloader/preloader.js'\nimport { follow, unfollow, setCurrentPage, toggleIsFetching, toggleFollowingProgress, requestUsers } from '../../redux/users-reduser'\nimport { getUsers , getPageSize , getTotalUsersCount , getCurrentPage , getFetching , getFollowinginProgress} from '../../redux/users-selectors'\n\n\nclass UsersAPIComponent extends React.Component {\n\n    componentDidMount() {\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize)\n    }\n\n    com\n\n    onPageChange = (pageNumber) => {\n        this.props.requestUsers(pageNumber, this.props.pageSize)\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ?\n                <Preloader />\n                : null}\n            <Users\n                totalUsersCount={this.props.totalUsersCount}\n                pageSize={this.props.pageSize}\n                currentPage={this.props.currentPage}\n                onPageChange={this.onPageChange}\n                users={this.props.users}\n                follow={this.props.follow}\n                unfollow={this.props.unfollow}\n                toggleFollowingProgress={this.props.toggleFollowingProgress}\n                followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getFetching(state),\n        followingInProgress: getFollowinginProgress(state),\n    }\n}\n\nexport default connect(mapStateToProps, { follow , unfollow , setCurrentPage , toggleIsFetching , toggleFollowingProgress , requestUsers })(UsersAPIComponent)"]},"metadata":{},"sourceType":"module"}