{"ast":null,"code":"var _jsxFileName = \"/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/Login/Login.jsx\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Input } from '../common/FormsControl/FormsControls';\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\nimport { connect } from 'react-redux';\nimport { login } from '../../redux/auth-reducer';\nimport { Redirect } from 'react-router-dom';\nconst maxLength = maxLengthCreator(20);\n\nconst Login = props => {\n  const onSubmit = formData => {\n    props.login(formData.email, formData.password, formData.rememberMe);\n  };\n\n  if (props.isAuth) {\n    return React.createElement(Redirect, {\n      to: \"/profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Login\"), React.createElement(LoginReduxForm, {\n      onSubmit: onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }));\n  }\n};\n\nconst LoginForm = props => {\n  return React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Field, {\n    placeholder: \"Email\",\n    component: Input,\n    name: \"email\",\n    validate: [required, maxLength],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Field, {\n    placeholder: \"password\",\n    component: Input,\n    name: \"password\",\n    type: \"password\",\n    validate: [required, maxLength],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"checkbox\",\n    component: \"input\",\n    name: \"rememberMe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), \"remember Me\"), React.createElement(\"div\", {\n    className: \"form-summary-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"send\")));\n};\n\nconst LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);","map":{"version":3,"sources":["/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/Login/Login.jsx"],"names":["React","Field","reduxForm","Input","required","maxLengthCreator","connect","login","Redirect","maxLength","Login","props","onSubmit","formData","email","password","rememberMe","isAuth","LoginForm","handleSubmit","LoginReduxForm","form","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAgBC,SAAhB,QAAgC,YAAhC;AACA,SAASC,KAAT,QAAsB,sCAAtB;AACA,SAAQC,QAAR,EAAmBC,gBAAnB,QAA2C,mCAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,KAAR,QAAoB,0BAApB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,MAAMC,SAAS,GAAGJ,gBAAgB,CAAC,EAAD,CAAlC;;AACA,MAAMK,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAMC,QAAQ,GAAIC,QAAD,IAAa;AAC1BF,IAAAA,KAAK,CAACJ,KAAN,CAAYM,QAAQ,CAACC,KAArB,EAA6BD,QAAQ,CAACE,QAAtC,EAAiDF,QAAQ,CAACG,UAA1D;AACH,GAFD;;AAGA,MAAGL,KAAK,CAACM,MAAT,EAAgB;AACZ,WAAM,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAN;AACH,GAFD,MAEK;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADG,EAEH,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEL,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAIC;AACJ,CAZD;;AAcA,MAAMM,SAAS,GAAIP,KAAD,IAAW;AACzB,SAAO;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACQ,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAE,OAApB;AAA6B,IAAA,SAAS,EAAEhB,KAAxC;AAA+C,IAAA,IAAI,EAAE,OAArD;AAA8D,IAAA,QAAQ,EAAE,CAACC,QAAD,EAAYK,SAAZ,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAE,UAApB;AAAgC,IAAA,SAAS,EAAEN,KAA3C;AAAkD,IAAA,IAAI,EAAE,UAAxD;AAAoE,IAAA,IAAI,EAAE,UAA1E;AAAsF,IAAA,QAAQ,EAAE,CAACC,QAAD,EAAYK,SAAZ,CAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAE,UAAb;AAAyB,IAAA,SAAS,EAAE,OAApC;AAA6C,IAAA,IAAI,EAAE,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,gBAHD,EAIX;AAAK,IAAA,SAAS,EAAE,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJW,EAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAL,CALD,CAAP;AAOH,CARD;;AASA,MAAMW,cAAc,GAAGlB,SAAS,CAAC;AAACmB,EAAAA,IAAI,EAAE;AAAP,CAAD,CAAT,CAA2BH,SAA3B,CAAvB;;AAEA,MAAMI,eAAe,GAAIC,KAAD,KAAY;AAChCN,EAAAA,MAAM,EAAEM,KAAK,CAACC,IAAN,CAAWP;AADa,CAAZ,CAAxB;;AAIA,eAAeX,OAAO,CAACgB,eAAD,EAAmB;AAACf,EAAAA;AAAD,CAAnB,CAAP,CAAmCG,KAAnC,CAAf","sourcesContent":["import React from 'react'\nimport {Field , reduxForm} from 'redux-form'\nimport { Input } from '../common/FormsControl/FormsControls'\nimport {required , maxLengthCreator } from '../../utils/validators/validators'\nimport { connect } from 'react-redux'\nimport {login} from '../../redux/auth-reducer'\nimport { Redirect } from 'react-router-dom'\n\nconst maxLength = maxLengthCreator(20)\nconst Login = (props) => {\n    const onSubmit = (formData) =>{\n        props.login(formData.email , formData.password , formData.rememberMe)\n    }\n    if(props.isAuth){\n        return<Redirect to=\"/profile\"/>\n    }else{\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit}/>\n    </div>\n    }\n}\n\nconst LoginForm = (props) => {\n    return <form onSubmit={props.handleSubmit}>\n            <div><Field placeholder={\"Email\"} component={Input} name={\"email\"} validate={[required , maxLength]}/></div>\n            <div><Field placeholder={\"password\"} component={Input} name={\"password\"} type={\"password\"} validate={[required , maxLength]}/></div>\n            <div><Field type={\"checkbox\"} component={\"input\"} name={\"rememberMe\"}/>remember Me</div>\n<div className={\"form-summary-error\"}>{}</div>\n            <div><button>send</button></div>\n        </form>\n}\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps , {login})(Login)"]},"metadata":{},"sourceType":"module"}