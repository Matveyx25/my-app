{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nlet initialState = {\n  users: [// { id: 1, fullName: 'Alex', followed: false, status: 'hello', location: {city: 'Samara' , country: 'Russia'}},\n    // { id: 2, fullName: 'Matvey', followed: false, status: 'hello', location: {city: 'Samara' , country: 'Russia'}},\n    // { id: 3, fullName: 'Artem', followed: false, status: 'hello', location: {city: 'Samara' , country: 'Russia'}},\n    // { id: 4, fullName: 'Egor', followed: false, status: 'hello', location: {city: 'Samara' , country: 'Russia'}},\n  ]\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: [...state.users, action.users]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const followAC = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowAC = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsersAC = users => ({\n  type: SET_USERS,\n  users\n});\nexport default usersReducer;","map":{"version":3,"sources":["/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/redux/users-reduser.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","initialState","users","usersReducer","state","action","type","map","u","id","userId","followed","followAC","unfollowAC","setUsersAC"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,CACH;AACA;AACA;AACA;AAJG;AADQ,CAAnB;;AASA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAEnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,MAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYK,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAGA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAAnB,EAA0B;AACtB,mBAAO,EAAC,GAAGF,CAAJ;AAAOG,cAAAA,QAAQ,EAAE;AAAjB,aAAP;AACH;;AACD,iBAAOH,CAAP;AACH,SALM;AAFJ,OAAP;;AASJ,SAAKT,QAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYK,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAGA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAAnB,EAA0B;AACtB,mBAAO,EAAC,GAAGF,CAAJ;AAAOG,cAAAA,QAAQ,EAAE;AAAjB,aAAP;AACH;;AACD,iBAAOH,CAAP;AACH,SALM;AAFJ,OAAP;;AASJ,SAAKR,SAAL;AACI,aAAO,EAAE,GAAGI,KAAL;AAAaF,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAkBG,MAAM,CAACH,KAAzB;AAApB,OAAP;;AACJ;AACI,aAAOE,KAAP;AAxBR;AA0BH,CA5BD;;AA8BA,OAAO,MAAMQ,QAAQ,GAAIF,MAAD,KAAa;AAACJ,EAAAA,IAAI,EAAER,MAAP;AAAgBY,EAAAA;AAAhB,CAAb,CAAjB;AACP,OAAO,MAAMG,UAAU,GAAIH,MAAD,KAAa;AAACJ,EAAAA,IAAI,EAAEP,QAAP;AAAkBW,EAAAA;AAAlB,CAAb,CAAnB;AACP,OAAO,MAAMI,UAAU,GAAIZ,KAAD,KAAY;AAACI,EAAAA,IAAI,EAAEN,SAAP;AAAmBE,EAAAA;AAAnB,CAAZ,CAAnB;AAGP,eAAeC,YAAf","sourcesContent":["const FOLLOW = 'FOLLOW'\nconst UNFOLLOW = 'UNFOLLOW'\nconst SET_USERS = 'SET_USERS'\n\nlet initialState = {\n    users: [\n        // { id: 1, fullName: 'Alex', followed: false, status: 'hello', location: {city: 'Samara' , country: 'Russia'}},\n        // { id: 2, fullName: 'Matvey', followed: false, status: 'hello', location: {city: 'Samara' , country: 'Russia'}},\n        // { id: 3, fullName: 'Artem', followed: false, status: 'hello', location: {city: 'Samara' , country: 'Russia'}},\n        // { id: 4, fullName: 'Egor', followed: false, status: 'hello', location: {city: 'Samara' , country: 'Russia'}},\n    ]\n}\n\nconst usersReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case FOLLOW: \n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if(u.id === action.userId){\n                        return {...u, followed: true}\n                    }\n                    return u\n                })\n            }\n        case UNFOLLOW: \n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if(u.id === action.userId){\n                        return {...u, followed: false}\n                    }\n                    return u\n                })\n            }\n        case SET_USERS:\n            return { ...state , users: [...state.users , action.users]}\n        default:\n            return state;\n    }\n}\n\nexport const followAC = (userId) => ({type: FOLLOW , userId})\nexport const unfollowAC = (userId) => ({type: UNFOLLOW , userId})\nexport const setUsersAC = (users) => ({type: SET_USERS , users})\n\n\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}