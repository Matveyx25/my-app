{"ast":null,"code":"import Dialogs from'./Dialogs';import{addMessageActionCreator,updateNewMessageTextActionCreater}from'../../redux/dialogs-reduser';import{connect}from'react-redux';import{withAuthRedirect}from'../../hoc/withAuthRedirect';import{compose}from'redux';var mapStateToProps=function mapStateToProps(state){return{dialogsPage:state.dialogsPage,newMessageState:state.dialogsPage.newMessageState,isAuth:state.auth.isAuth};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{addMessage:function addMessage(newMessageBody){dispatch(addMessageActionCreator(newMessageBody));}};};export default compose(withAuthRedirect,connect(mapStateToProps,mapDispatchToProps))(Dialogs);","map":{"version":3,"sources":["/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/Dialogs/DialogsContainer.jsx"],"names":["Dialogs","addMessageActionCreator","updateNewMessageTextActionCreater","connect","withAuthRedirect","compose","mapStateToProps","state","dialogsPage","newMessageState","isAuth","auth","mapDispatchToProps","dispatch","addMessage","newMessageBody"],"mappings":"AAAA,MAAOA,CAAAA,OAAP,KAAoB,WAApB,CACA,OAASC,uBAAT,CAAkCC,iCAAlC,KAA2E,6BAA3E,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,gBAAT,KAAiC,4BAAjC,CACA,OAASC,OAAT,KAAwB,OAAxB,CAEA,GAAIC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC7B,MAAO,CACHC,WAAW,CAAED,KAAK,CAACC,WADhB,CAEHC,eAAe,CAAEF,KAAK,CAACC,WAAN,CAAkBC,eAFhC,CAGHC,MAAM,CAAEH,KAAK,CAACI,IAAN,CAAWD,MAHhB,CAAP,CAKH,CAND,CAQA,GAAIE,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACnC,MAAO,CACHC,UAAU,CAAE,oBAACC,cAAD,CAAoB,CAC5BF,QAAQ,CAACZ,uBAAuB,CAACc,cAAD,CAAxB,CAAR,CACH,CAHE,CAAP,CAKH,CAND,CAQA,cAAeV,CAAAA,OAAO,CAClBD,gBADkB,CAElBD,OAAO,CAACG,eAAD,CAAkBM,kBAAlB,CAFW,CAAP,CAGVZ,OAHU,CAAf","sourcesContent":["import Dialogs from './Dialogs';\nimport { addMessageActionCreator, updateNewMessageTextActionCreater } from '../../redux/dialogs-reduser';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n        newMessageState: state.dialogsPage.newMessageState,\n        isAuth: state.auth.isAuth\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addMessage: (newMessageBody) => {\n            dispatch(addMessageActionCreator(newMessageBody));\n        }\n    }\n}\n\nexport default compose(\n    withAuthRedirect,\n    connect(mapStateToProps, mapDispatchToProps))\n    (Dialogs)"]},"metadata":{},"sourceType":"module"}