{"ast":null,"code":"var _jsxFileName = \"/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/Users/UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport s from './Users.module.css';\nimport Users from './Users';\nimport * as axios from 'axios';\nimport Preloader from '../common/preloader/preloader.js';\nimport { follow, setUsers, unfollow, setCurrentPage, setUsersTotalCount, toggleIsFetching } from '../../redux/users-reduser';\nimport { getUsers } from '../../api/api';\n\nclass UsersAPIComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChange = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.toggleIsFetching(true);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`, {\n        withCredentials: true\n      }).then(response => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    getUsers(this.props.currentPage, this.props.pa).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setUsersTotalCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.isFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }) : null, React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChange: this.onPageChange,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setUsersTotalCount,\n  toggleIsFetching\n})(UsersAPIComponent);","map":{"version":3,"sources":["/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/Users/UsersContainer.jsx"],"names":["React","connect","s","Users","axios","Preloader","follow","setUsers","unfollow","setCurrentPage","setUsersTotalCount","toggleIsFetching","getUsers","UsersAPIComponent","Component","onPageChange","pageNumber","props","get","pageSize","withCredentials","then","response","data","items","componentDidMount","currentPage","pa","totalCount","render","isFetching","totalUsersCount","users","mapStateToProps","state","usersPage"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport s from './Users.module.css'\nimport Users from './Users'\nimport * as axios from 'axios'\nimport Preloader from '../common/preloader/preloader.js'\nimport {follow , setUsers , unfollow , setCurrentPage , setUsersTotalCount , toggleIsFetching} from '../../redux/users-reduser'\nimport { getUsers } from '../../api/api'\n\nclass UsersAPIComponent extends React.Component {\n\n    componentDidMount() {\n        this.props.toggleIsFetching(true)\n        \n        getUsers(this.props.currentPage , this.props.pa).then(response => {\n                this.props.toggleIsFetching(false)\n                this.props.setUsers(response.data.items);\n                this.props.setUsersTotalCount(response.data.totalCount)\n            })\n    }\n\n    onPageChange = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber)\n        this.props.toggleIsFetching(true)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`, {withCredentials: true})\n        .then(response => {\n        this.props.toggleIsFetching(false)\n        this.props.setUsers(response.data.items)\n        })\n    }\n\n    render() {\n        return <>\n        {this.props.isFetching ? \n        <Preloader />\n         : null}\n         <Users\n        totalUsersCount={this.props.totalUsersCount} \n        pageSize={this.props.pageSize}\n        currentPage={this.props.currentPage}\n        onPageChange={this.onPageChange}\n        users={this.props.users}\n        follow={this.props.follow}\n        unfollow={this.props.unfollow}\n        />\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n    }\n}\n\nexport default connect(mapStateToProps , {\n    follow , unfollow , setUsers , \n    setCurrentPage , setUsersTotalCount ,\n     toggleIsFetching\n})(UsersAPIComponent)"]},"metadata":{},"sourceType":"module"}