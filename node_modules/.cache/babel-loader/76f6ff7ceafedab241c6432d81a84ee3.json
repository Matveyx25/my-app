{"ast":null,"code":"import Dialogs from './Dialogs';\nimport { addMessageActionCreator, updateNewMessageTextActionCreater } from '../../redux/dialogs-reduser';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nlet AuthRedirectComponent = withAuthRedirect(Dialogs);\n\nlet mapStateToPropsForRedirect = state => ({\n  isAuth: state.auth.isAuth\n});\n\nAuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent);\n\nlet mapStateToProps = state => {\n  return {\n    dialogsPage: state.dialogsPage,\n    newMessageState: state.dialogsPage.newMessageState,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    updateNewMessageBody: text => {\n      dispatch(updateNewMessageTextActionCreater(text));\n    },\n    addMessage: () => {\n      dispatch(addMessageActionCreator());\n    }\n  };\n};\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\nexport default DialogsContainer;","map":{"version":3,"sources":["/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/Dialogs/DialogsContainer.jsx"],"names":["Dialogs","addMessageActionCreator","updateNewMessageTextActionCreater","connect","Redirect","withAuthRedirect","AuthRedirectComponent","mapStateToPropsForRedirect","state","isAuth","auth","mapStateToProps","dialogsPage","newMessageState","mapDispatchToProps","dispatch","updateNewMessageBody","text","addMessage","DialogsContainer"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,SAASC,uBAAT,EAAmCC,iCAAnC,QAA2E,6BAA3E;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AAEA,IAAIC,qBAAqB,GAAGD,gBAAgB,CAACL,OAAD,CAA5C;;AAEA,IAAIO,0BAA0B,GAAIC,KAAD,KAAY;AACzCC,EAAAA,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWD;AADsB,CAAZ,CAAjC;;AAKAH,qBAAqB,GAAGH,OAAO,CAACI,0BAAD,CAAP,CAAoCD,qBAApC,CAAxB;;AAGA,IAAIK,eAAe,GAAIH,KAAD,IAAW;AAC7B,SAAM;AACFI,IAAAA,WAAW,EAAGJ,KAAK,CAACI,WADlB;AAEFC,IAAAA,eAAe,EAAEL,KAAK,CAACI,WAAN,CAAkBC,eAFjC;AAGFJ,IAAAA,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWD;AAHjB,GAAN;AAKH,CAND;;AAQA,IAAIK,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAM;AACFC,IAAAA,oBAAoB,EAAGC,IAAD,IAAU;AAC5BF,MAAAA,QAAQ,CAACb,iCAAiC,CAACe,IAAD,CAAlC,CAAR;AACH,KAHC;AAIFC,IAAAA,UAAU,EAAE,MAAM;AACdH,MAAAA,QAAQ,CAACd,uBAAuB,EAAxB,CAAR;AACH;AANC,GAAN;AAQH,CATD;;AAWA,MAAMkB,gBAAgB,GAAGhB,OAAO,CAACQ,eAAD,EAAmBG,kBAAnB,CAAP,CAA8CR,qBAA9C,CAAzB;AAEA,eAAea,gBAAf","sourcesContent":["import Dialogs from './Dialogs';\nimport { addMessageActionCreator , updateNewMessageTextActionCreater} from '../../redux/dialogs-reduser';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\n\nlet AuthRedirectComponent = withAuthRedirect(Dialogs)\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\n\nAuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent)\n\n\nlet mapStateToProps = (state) => {\n    return{\n        dialogsPage : state.dialogsPage, \n        newMessageState: state.dialogsPage.newMessageState,\n        isAuth: state.auth.isAuth\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return{\n        updateNewMessageBody: (text) => {\n            dispatch(updateNewMessageTextActionCreater(text));\n        },\n        addMessage: () => {\n            dispatch(addMessageActionCreator());\n        }\n    }\n}\n\nconst DialogsContainer = connect(mapStateToProps , mapDispatchToProps)(AuthRedirectComponent);\n\nexport default DialogsContainer;"]},"metadata":{},"sourceType":"module"}