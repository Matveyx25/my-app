{"ast":null,"code":"var _jsxFileName = \"/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/Login/Login.jsx\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Input, createField } from '../common/FormsControl/FormsControls';\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\nimport { connect } from 'react-redux';\nimport { login } from '../../redux/auth-reducer';\nimport { Redirect } from 'react-router-dom';\nimport style from '../common/FormsControl/FormControls.module.css';\nconst maxLength = maxLengthCreator(20);\n\nconst Login = props => {\n  const onSubmit = formData => {\n    props.login(formData.email, formData.password, formData.rememberMe);\n  };\n\n  if (props.isAuth) {\n    return React.createElement(Redirect, {\n      to: \"/profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Login\"), React.createElement(LoginReduxForm, {\n      onSubmit: onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }));\n  }\n};\n\nconst LoginForm = ({\n  handleSubmit,\n  error\n}) => {\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, createField('Email', \"email\", [required, maxLength], Input), createField('Password', \"password\", [required, maxLength], Input), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"checkbox\",\n    component: \"input\",\n    name: \"rememberMe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), \"remember Me\"), error && React.createElement(\"div\", {\n    className: style.formSummaryError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, error), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"send\")));\n};\n\nconst LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);","map":{"version":3,"sources":["/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/Login/Login.jsx"],"names":["React","Field","reduxForm","Input","createField","required","maxLengthCreator","connect","login","Redirect","style","maxLength","Login","props","onSubmit","formData","email","password","rememberMe","isAuth","LoginForm","handleSubmit","error","formSummaryError","LoginReduxForm","form","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAgBC,SAAhB,QAAgC,YAAhC;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,sCAAnC;AACA,SAAQC,QAAR,EAAmBC,gBAAnB,QAA2C,mCAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,KAAR,QAAoB,0BAApB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,gDAAlB;AAEA,MAAMC,SAAS,GAAGL,gBAAgB,CAAC,EAAD,CAAlC;;AACA,MAAMM,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAMC,QAAQ,GAAIC,QAAD,IAAa;AAC1BF,IAAAA,KAAK,CAACL,KAAN,CAAYO,QAAQ,CAACC,KAArB,EAA6BD,QAAQ,CAACE,QAAtC,EAAiDF,QAAQ,CAACG,UAA1D;AACH,GAFD;;AAGA,MAAGL,KAAK,CAACM,MAAT,EAAgB;AACZ,WAAM,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAN;AACH,GAFD,MAEK;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADG,EAEH,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEL,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAIC;AACJ,CAZD;;AAcA,MAAMM,SAAS,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAgBC,EAAAA;AAAhB,CAAD,KAA4B;AAC1C,SAAO;AAAM,IAAA,QAAQ,EAAED,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACVjB,WAAW,CAAC,OAAD,EAAW,OAAX,EAAqB,CAACC,QAAD,EAAYM,SAAZ,CAArB,EAA8CR,KAA9C,CADD,EAEVC,WAAW,CAAC,UAAD,EAAc,UAAd,EAA2B,CAACC,QAAD,EAAYM,SAAZ,CAA3B,EAAoDR,KAApD,CAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAE,UAAb;AAAyB,IAAA,SAAS,EAAE,OAApC;AAA6C,IAAA,IAAI,EAAE,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,gBAHD,EAIEmB,KAAK,IAAI;AAAK,IAAA,SAAS,EAAEZ,KAAK,CAACa,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCD,KAAzC,CAJX,EAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAL,CALD,CAAP;AAOH,CARD;;AASA,MAAME,cAAc,GAAGtB,SAAS,CAAC;AAACuB,EAAAA,IAAI,EAAE;AAAP,CAAD,CAAT,CAA2BL,SAA3B,CAAvB;;AAEA,MAAMM,eAAe,GAAIC,KAAD,KAAY;AAChCR,EAAAA,MAAM,EAAEQ,KAAK,CAACC,IAAN,CAAWT;AADa,CAAZ,CAAxB;;AAIA,eAAeZ,OAAO,CAACmB,eAAD,EAAmB;AAAClB,EAAAA;AAAD,CAAnB,CAAP,CAAmCI,KAAnC,CAAf","sourcesContent":["import React from 'react'\nimport {Field , reduxForm} from 'redux-form'\nimport { Input, createField } from '../common/FormsControl/FormsControls'\nimport {required , maxLengthCreator } from '../../utils/validators/validators'\nimport { connect } from 'react-redux'\nimport {login} from '../../redux/auth-reducer'\nimport { Redirect } from 'react-router-dom'\nimport style from '../common/FormsControl/FormControls.module.css'\n\nconst maxLength = maxLengthCreator(20)\nconst Login = (props) => {\n    const onSubmit = (formData) =>{\n        props.login(formData.email , formData.password , formData.rememberMe)\n    }\n    if(props.isAuth){\n        return<Redirect to=\"/profile\"/>\n    }else{\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit}/>\n    </div>\n    }\n}\n\nconst LoginForm = ({handleSubmit , error}) => {\n    return <form onSubmit={handleSubmit}>\n{createField('Email' , \"email\" , [required , maxLength] , Input)}\n{createField('Password' , \"password\" , [required , maxLength] , Input)}\n            <div><Field type={\"checkbox\"} component={\"input\"} name={\"rememberMe\"}/>remember Me</div>\n            {error && <div className={style.formSummaryError}>{error}</div>}\n            <div><button>send</button></div>\n        </form>\n}\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps , {login})(Login)"]},"metadata":{},"sourceType":"module"}