{"ast":null,"code":"var _jsxFileName = \"/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/common/FormsControl/FormsControls.js\";\nimport React from 'react';\nimport s from './FormControls.module.css';\n\nconst FormControl = ({\n  input,\n  meta,\n  child,\n  ...props\n}) => {\n  const hasError = meta.touched && meta.error;\n  return React.createElement(\"div\", {\n    className: s.formControl + \" \" + (hasError ? s.error : \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.child, hasError && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, meta.error));\n};\n\nexport const Textarea = ({\n  input,\n  meta,\n  ...props\n}) => {\n  return React.createElement(FormControl, Object.assign({}, this.props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({}, input, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })));\n};\nexport const Input = ({\n  input,\n  meta,\n  ...props\n}) => {\n  const hasError = meta.touched && meta.error;\n  return React.createElement(\"div\", {\n    className: s.formControl + \" \" + (hasError ? s.error : \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"input\", Object.assign({}, input, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })), hasError && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, meta.error));\n};","map":{"version":3,"sources":["/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/common/FormsControl/FormsControls.js"],"names":["React","s","FormControl","input","meta","child","props","hasError","touched","error","formControl","Textarea","Input"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,2BAAd;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,KAAD;AAASC,EAAAA,IAAT;AAAgBC,EAAAA,KAAhB;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AACvD,QAAMC,QAAQ,GAAGH,IAAI,CAACI,OAAL,IAAgBJ,IAAI,CAACK,KAAtC;AAEA,SACI;AAAK,IAAA,SAAS,EAAER,CAAC,CAACS,WAAF,GAAgB,GAAhB,IAAuBH,QAAQ,GAAGN,CAAC,CAACQ,KAAL,GAAa,EAA5C,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACD,KADX,EAEQE,QAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,IAAI,CAACK,KAAZ,CAFpB,CADJ;AAMH,CATD;;AAWA,OAAO,MAAME,QAAQ,GAAG,CAAC;AAACR,EAAAA,KAAD;AAASC,EAAAA,IAAT;AAAgB,KAAGE;AAAnB,CAAD,KAA+B;AACnD,SAAO,oBAAC,WAAD,oBAAiB,KAAKA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA6B,+CAAWH,KAAX,EAAsBG,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA7B,CAAP;AACH,CAFM;AAIP,OAAO,MAAMM,KAAK,GAAG,CAAC;AAACT,EAAAA,KAAD;AAASC,EAAAA,IAAT;AAAgB,KAAGE;AAAnB,CAAD,KAA+B;AAEhD,QAAMC,QAAQ,GAAGH,IAAI,CAACI,OAAL,IAAgBJ,IAAI,CAACK,KAAtC;AAEA,SACI;AAAK,IAAA,SAAS,EAAER,CAAC,CAACS,WAAF,GAAgB,GAAhB,IAAuBH,QAAQ,GAAGN,CAAC,CAACQ,KAAL,GAAa,EAA5C,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,+CAAWN,KAAX,EAAsBG,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,EAEQC,QAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,IAAI,CAACK,KAAZ,CAFpB,CADJ;AAMH,CAVM","sourcesContent":["import React from 'react'\nimport s from './FormControls.module.css'\n\nconst FormControl = ({input , meta , child , ...props}) => {\n    const hasError = meta.touched && meta.error\n\n    return (\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\n            {props.child}\n              { hasError && <span>{meta.error}</span>}              \n        </div>\n    )\n}\n\nexport const Textarea = ({input , meta , ...props}) => {\n    return <FormControl {...this.props}><input {...input} {...props}/></FormControl> \n}\n\nexport const Input = ({input , meta , ...props}) => {\n    \n    const hasError = meta.touched && meta.error\n\n    return (\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\n            <input {...input} {...props} />\n              { hasError && <span>{meta.error}</span>}              \n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}