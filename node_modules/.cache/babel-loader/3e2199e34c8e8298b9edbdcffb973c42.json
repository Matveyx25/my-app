{"ast":null,"code":"var _jsxFileName = \"/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/hoc/withAuthRedirect.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nexport const withAuthRedirect = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      });\n      return React.createElement(Component, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  return RedirectComponent;\n};\nlet AuthRedirectComponent = withAuthRedirect(Dialogs);\n\nlet mapStateToPropsForRedirect = state => ({\n  isAuth: state.auth.isAuth\n});\n\nAuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent);","map":{"version":3,"sources":["/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/hoc/withAuthRedirect.js"],"names":["React","Redirect","withAuthRedirect","Component","RedirectComponent","render","props","isAuth","AuthRedirectComponent","Dialogs","mapStateToPropsForRedirect","state","auth","connect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,SAAD,IAAe;AAC3C,QAAMC,iBAAN,SAAgCJ,KAAK,CAACG,SAAtC,CAAgD;AAC5CE,IAAAA,MAAM,GAAE;AACA,UAAG,CAAC,KAAKC,KAAL,CAAWC,MAAf,EAAuB,OAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACvB,aAAO,oBAAC,SAAD,oBAAe,KAAKD,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACP;;AAJ2C;;AAMhD,SAAOF,iBAAP;AACH,CARM;AAUP,IAAII,qBAAqB,GAAGN,gBAAgB,CAACO,OAAD,CAA5C;;AAEA,IAAIC,0BAA0B,GAAIC,KAAD,KAAY;AACzCJ,EAAAA,MAAM,EAAEI,KAAK,CAACC,IAAN,CAAWL;AADsB,CAAZ,CAAjC;;AAKAC,qBAAqB,GAAGK,OAAO,CAACH,0BAAD,CAAP,CAAoCF,qBAApC,CAAxB","sourcesContent":["import React from 'react'\nimport { Redirect } from 'react-router-dom'\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render(){\n                if(!this.props.isAuth) return <Redirect to=\"/login\" />\n                return <Component {...this.props}/>\n        }\n    }\n    return RedirectComponent\n}\n\nlet AuthRedirectComponent = withAuthRedirect(Dialogs)\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\n\nAuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent)"]},"metadata":{},"sourceType":"module"}