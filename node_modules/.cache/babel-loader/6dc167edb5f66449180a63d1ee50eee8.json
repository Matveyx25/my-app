{"ast":null,"code":"var _jsxFileName = \"/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/Users/UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport s from './Users.module.css';\nimport Users from './Users';\nimport * as axios from 'axios';\nimport preloader from \"../../assets/img/rings.svg\";\nimport { followAC, setUsersAC, unfollowAC, setCurrentPageAC, setUsersTotalCountAC } from '../../redux/users-reduser';\n\nclass UsersAPIComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChange = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.isFetching ? React.createElement(\"img\", {\n      className: s.preloader,\n      src: preloader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }) : null, React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChange: this.onPageChange,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(followAC(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setUsersTotalCountAC(totalCount));\n    },\n    toggleIsFetching: isFetching => {\n      dispatch(toggleIsFetchingAC(isFetching));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersAPIComponent);","map":{"version":3,"sources":["/Users/matveystepanov/Documents/SamuraysWay/first-project/my-app/src/components/Users/UsersContainer.jsx"],"names":["React","connect","s","Users","axios","followAC","setUsersAC","unfollowAC","setCurrentPageAC","setUsersTotalCountAC","UsersAPIComponent","Component","onPageChange","pageNumber","props","setCurrentPage","get","pageSize","then","response","setUsers","data","items","componentDidMount","toggleIsFetching","currentPage","setTotalUsersCount","totalCount","render","isFetching","preloader","totalUsersCount","users","follow","unfollow","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userId","toggleIsFetchingAC"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport s from './Users.module.css'\nimport Users from './Users'\nimport * as axios from 'axios'\nimport preloader from '../../assets/img/rings.svg'\nimport {followAC , setUsersAC , unfollowAC , setCurrentPageAC , setUsersTotalCountAC} from '../../redux/users-reduser'\n\nclass UsersAPIComponent extends React.Component {\n\n    componentDidMount() {\n        this.props.toggleIsFetching(true)\n            axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.setUsers(response.data.items);\n                this.props.setTotalUsersCount(response.data.totalCount)\n            })\n    }\n\n    onPageChange = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\n        .then(response => {\n            this.props.setUsers(response.data.items)\n        })\n    }\n\n    render() {\n        return <>\n        {this.props.isFetching ? \n        <img className={s.preloader} src={preloader}/>\n         : null}\n         <Users\n        totalUsersCount={this.props.totalUsersCount} \n        pageSize={this.props.pageSize}\n        currentPage={this.props.currentPage}\n        onPageChange={this.onPageChange}\n        users={this.props.users}\n        follow={this.props.follow}\n        unfollow={this.props.unfollow}\n        />\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        follow: (userId) => {\n            dispatch(followAC(userId))\n        },\n        unfollow: (userId) => {\n            dispatch(unfollowAC(userId))\n        },\n        setUsers: (users) => {\n            dispatch(setUsersAC(users))\n        },\n        setCurrentPage: (pageNumber) => {\n            dispatch(setCurrentPageAC(pageNumber))\n        },\n        setTotalUsersCount: (totalCount) => {\n            dispatch(setUsersTotalCountAC(totalCount))\n        },\n        toggleIsFetching: (isFetching) => {\n            dispatch(toggleIsFetchingAC(isFetching))\n        },\n    }\n}\n\nexport default connect(mapStateToProps , mapDispatchToProps)(UsersAPIComponent)"]},"metadata":{},"sourceType":"module"}